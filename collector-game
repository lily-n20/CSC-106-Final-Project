//global variables
var characterNumber = 0;
var ticks = 1;
var hearts = 5;
var bossHearts = 6;
var jewelCounter = 0;
var xPositions = [];
var yPositions = [];
var starCount = 15;
var bossStarCount = 50;
var bossXPositions = [];
var bossYPositions = [];
var starSpeed = [];
var currentScene = 1;
var numOfBitmoji = 4;
var numOfConfetti = 1000;
//scene 1 = start, scene 2 = instructions, scene 3 = character selection, scene 4 = ready scene, scene 5 = game scene, scene 6 = boss scene, scene 7 = end scene, scene 8 = game over scene


//Button Class
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
    this.color = config.color || color(255, 248, 222);
};
Button.prototype.draw = function() {
    rectMode(CORNER);
    noStroke();
    fill(255, 204, 204, 200);
    rect(this.x - 15, this.y - 15, this.width + 30 , this.height + 30, 20);
    fill(255, 204, 204);
    rect(this.x -10, this.y - 10, this.width + 20 , this.height + 20, 20);
    fill(this.color);
    rect(this.x, this.y, this.width, this.height, 20);
    noFill();
    stroke(112, 255, 229);
    strokeWeight(5);
    rect(this.x - 2.5, this.y - 2.5, this.width + 5 , this.height+ 5, 20);
    noStroke();
    fill(0, 0, 0);
    textSize(20);
    textAlign(CENTER, TOP);
    var f = createFont("monospace");
    textFont(f);
    text(this.label, this.x+69, this.y + this.height/6.7);
};
Button.prototype.changeColor = function(newColor){};
Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};
Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

//sun rings class
var Ring = function(config) {
    this.x = config.x || 370;
    this.y = config.y || 200;
    this.width = config.width || 50;
    this.height = config.height || 50;
    this.color = config.color || color(255, 248, 222);
};
Ring.prototype.draw = function() {
    noStroke();
    fill(this.color);
    ellipse(this.x, this.y, this.width, this.height);

};
var yellowEllipse = new Ring
({
    x: 370,
    y: 200,
    width: 100,
    height: 100,
    color: color(255, 221, 25),
    
});
var secondRing = new Ring 
({
    width: 130,
    height: 130,
    color: color(255, 140, 87, 200)
});
var thirdRing = new Ring 
({
    width: 160,
    height: 160,
    color: color(232, 42, 86, 150)
});
var fourthRing = new Ring 
({
    width: 190,
    height: 190,
    color: color(120, 39, 102, 100)
});

var drawSun = function () {
    fourthRing.draw();
    thirdRing.draw();
    secondRing.draw();
    yellowEllipse.draw();
    
    fill(173, 17, 79);
    ellipse(300, 200, 30, 30);
    fill(99, 0, 96, 180);
    ellipse(297, 200, 25, 30); //smaller sun
};  //sun for game screen

var drawCloud = function (x, y, h, newColor1, newColor2)
{
 //draw cloud bottom cloud
    noStroke();
    //fill(133, 243, 255);
    fill(newColor1);
    ellipse(x + 20 * h/100, y + 113 * h/100, 34 * h/100, 24 * h/100);
    ellipse(x + 36 * h/100, y + 113 * h/100, 35 * h/100, 34 * h/100);
    ellipse(x + 18 * h/100, y + 102 * h/100, 35 * h/100, 34 * h/100);
    ellipse(x + 65 * h/100, y + 118 * h/100, 50 * h/100, 50 * h/100);
    ellipse(x + 123 * h/100, y + 112 * h/100, 50 * h/100, 50 * h/100);
    ellipse(x + 95 * h/100, y + 123 * h/100, 30 * h/100, 30 * h/100);
    ellipse(x + 154 * h/100, y + 119 * h/100, 50 * h/100, 40 * h/100);
    ellipse(x + 174 * h/100, y + 103 * h/100, 50 * h/100, 40 * h/100);
    
    //draw top cloud
    //fill(150, 159, 255);
    fill(newColor2);
    ellipse(x + 113 * h/100, y + 66 * h/100, 120 * h/100, 70 * h/100);
    ellipse(x + 95 * h/100, y + 85 * h/100, 60 * h/100, 60 * h/100);
    ellipse(x + 140 * h/100, y + 76 * h/100, 60 * h/100, 60 * h/100);
    ellipse(x + 51 * h/100, y + 74 * h/100, 60 * h/100, 60 * h/100);
    ellipse(x + 110 * h/100, y + 38 * h/100, 73 * h/100, 60 * h/100);
    ellipse(x + 77 * h/100, y + 45 * h/100, 73 * h/100, 60 * h/100);
    ellipse(x + 165 * h/100, y + 93 * h/100, 60 * h/100, 30 * h/100);
    ellipse(x + 34 * h/100, y + 93 * h/100, 60 * h/100, 30 * h/100);
    ellipse(x + 49 * h/100, y + 103 * h/100, 20 * h/100, 13 * h/100);
    ellipse(x + 67 * h/100, y + 99 * h/100, 20 * h/100, 13 * h/100);
};

//push new stars @ random location
for (var i = 0; i < starCount; i++) 
    {
        xPositions.push(random(0,400));
        yPositions.push(random(0,400));
    }
var drawStars = function() {
     for (var i = 0; i < xPositions.length; i++) {
        fill(255, 255, 255);
        rect(xPositions[i], yPositions[i], 5, 5);
    }
    
};

//end scene functions
var RingEndGame = function(config) {
    this.x = config.x || 10;
    this.y = config.y || 200;
    this.width = config.width || 50;
    this.height = config.height || 50;
    this.color = config.color || color(255, 248, 222);
};
RingEndGame.prototype.draw = function() {
    noStroke();
    fill(this.color);
    ellipse(this.x, this.y, this.width, this.height);

};

var yellowEllipseEndGame = new RingEndGame
({
    x: 10,
    y: 200,
    width: 100,
    height: 100,
    color: color(255, 221, 25),
    
});
var secondRingEndGame = new RingEndGame 
({
    width: 130,
    height: 130,
    color: color(255, 140, 87, 200)
});
var thirdRingEndGame = new RingEndGame 
({
    width: 160,
    height: 160,
    color: color(232, 42, 86, 150)
});
var fourthRingEndGame = new RingEndGame 
({
    width: 190,
    height: 190,
    color: color(120, 39, 102, 100)
});
 
var drawSun = function () {
    fourthRingEndGame.draw();
    thirdRingEndGame.draw();
    secondRingEndGame.draw();
    yellowEllipseEndGame.draw();
    
    fill(173, 17, 79);
    ellipse(160, 200, 30, 30);
    fill(99, 0, 96, 180);
    ellipse(157, 200, 25, 30); //smaller sun
};  //sun for end screen

for (var i = 0; i < bossStarCount; i++) 
{
    bossXPositions.push(random(0,400));
    bossYPositions.push(random(0,400));
    starSpeed.push(random(1,2));
}

var drawBossStars = function (){
    for (var i = 0; i < xPositions.length; i++) {
        fill(255, 255, 255);
        rect(xPositions[i], yPositions[i], 5, 5);
        yPositions[i] += starSpeed[i];
        //speed
          if (yPositions[i] > 400) {
            yPositions[i] = 0;
          }
    }
};

//startscene cloud
var drawBackgroundClouds = function() {   //Start scene cloud
     //top big cloud
    fill(92, 135, 255);
    ellipse(0,308, 100, 100);
    ellipse(50, 356, 100, 100);
    ellipse(130, 360, 100, 100);
    ellipse(201, 356, 100, 100);
    ellipse(242, 319, 100, 100);
    ellipse(279, 333, 100, 100);
    ellipse(334, 374, 100, 100);
    ellipse(407, 327, 100, 100);
    
    //bottom big cloud
    fill(79, 179, 255);
    ellipse(0,369, 100, 100);
    ellipse(50, 411, 100, 100);
    ellipse(130, 431, 100, 100);
    ellipse(201, 415, 100, 100);
    ellipse(242, 383, 100, 100);
    ellipse(264, 392, 100, 100);
    ellipse(334, 432, 100, 100);
    ellipse(407, 406, 100, 100);

};  

//characters
var feetFire = function(x,y,fireHeight)
{
fill(255, 0, 0);
stroke(255, 0, 0);
ellipse(x-fireHeight/10*45,y+fireHeight/10*11,fireHeight/10*22,fireHeight/10*74);
fill(255, 128, 0);
ellipse(x-fireHeight/10*45,y+fireHeight/10*11,fireHeight/10*15,fireHeight/10*62);
fill(255, 230, 0);
ellipse(x-fireHeight/10*45,y+fireHeight/10*11,fireHeight/10*9,fireHeight/10*43);

fill(255, 0, 0);
stroke(255, 0, 0);
ellipse(x-fireHeight/10*6,y+fireHeight/10*11,fireHeight/10*22,fireHeight/10*74);
fill(255, 128, 0);
ellipse(x-fireHeight/10*6,y+fireHeight/10*11,fireHeight/10*15,fireHeight/10*62);
fill(255, 230, 0);
ellipse(x-fireHeight/10*6,y+fireHeight/10*11,fireHeight/10*9,fireHeight/10*43);
};

//Lily's character
    //male astronaut
var drawMaleAstro = function (x, y, h)  //male astronaut
{
    noStroke();
    //draw right legs
    fill(0, 48, 110); //darker blue
    quad(x + 110 * h/100, y + 122 * h/100, x + 126 * h/100, y + 101 * h/100, x + 138 * h/100, y + 109 * h/100, x + 120 * h/100, y + 134 * h/100);
    quad(x + 120 * h/100, y + 135 * h/100, x + 145 * h/100, y + 115 * h/100, x + 150 * h/100, y + 127 * h/100, x + 121 * h/100, y + 140 * h/100);
    fill(212, 117, 0); //lighter blue
    quad(x + 121 * h/100, y + 132 * h/100, x + 138 * h/100, y + 109 * h/100, x + 146 * h/100, y + 115 * h/100, x + 120 * h/100, y + 138 * h/100);
    quad(x + 121 * h/100, y + 138 * h/100, x + 150 * h/100, y + 126 * h/100, x + 159 * h/100, y + 146 * h/100, x + 117 * h/100, y + 154 * h/100);
    
    // draw arms
    fill(0, 48, 110); //darker blue
    ellipse(x + 9 * h/100, y + 61 * h/100, 30 * h/100, 30 * h/100);
    ellipse(x + 174 * h/100, y + 63 * h/100, 30 * h/100, 30 * h/100);
    fill(212, 117, 0); //lighter blue
    rect(x + 127 * h/100, y + 44 * h/100, 40 * h/100, 26 * h/100);
    rect(x + 18 * h/100, y + 44 * h/100, 33 * h/100, 26 * h/100);
    quad(x + 8 * h/100, y + 46 * h/100, x + 31 * h/100, y + 44 * h/100, x + 43 * h/100, y + 70 * h/100, x + 19 * h/100, y + 74 * h/100);
    quad(x + 155 * h/100, y + 43 * h/100, x + 184 * h/100, y + 48 * h/100, x + 165 * h/100, y + 77 * h/100, x + 133 * h/100, y + 69 * h/100);
    

    //draw body - rounded rect
    fill(212, 117, 0);  //light blue
    rect(x + 50 * h/100, y + 20 * h/100, 80 * h/100, 70 * h/100);
    ellipse(x + 90 * h/100, y + 20 * h/100, 80 * h/100, 80 * h/100);  //top curve
    ellipse(x + 90 * h/100, y + 90 * h/100, 80 * h/100, 80 * h/100); //bottom curve
    ellipse(x + 90 * h/100, y - 19 * h/100, 20 * h/100, 10 * h/100);
    
    
    //face
    fill(255, 251, 135, 190); // FUSCHIA EARS right
    ellipse(x + 129 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //right
    fill(65, 80, 105); //dark purple
    rect(x + 84 * h/100, y + 11 * h/100, 43* h/100, 33* h/100);
    ellipse(x + 104 * h/100, y + 15 * h/100, 46 * h/100, 40 * h/100); //dark purple inside helmet
    fill(61, 35, 1, 140);
    ellipse(x + 96 * h/100, y + 30 * h/100, 50 * h/100, 50 * h/100);  //inside face
    fill(212, 117, 0); //light blue
    rect(x + 70 * h/100, y + 44 * h/100, 48 * h/100, 28 * h/100); //horizontal
    rect(x + 58 * h/100, y + 5 * h/100, 26 * h/100, 59 * h/100); // vertical light blue cover edges for face
    
    //eyes
    fill(255, 213, 0, 90);
    ellipse(x + 102 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer left
    ellipse(x + 113 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer right
    fill(255, 213, 0);
    ellipse(x + 102 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); //inner eye left
    ellipse(x + 113 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); // inner eye right

    //darker pants + suit detail
    
    fill(0, 48, 110); //darker blue
    rect(x + 50 * h/100, y + 49 * h/100, 77 * h/100, 43 * h/100); //pants
    ellipse(x + 88 * h/100, y + 90 * h/100, 77 * h/100, 80 * h/100); //pants
    rect(x + 47 * h/100, y + 36 * h/100, 30 * h/100, 9 * h/100, 20); //detail linerounded
    rect(x + 50 * h/100, y + 36 * h/100, 34 * h/100, 9 * h/100); //detail corner
    
    fill(212, 117, 0); //light blue
    rect(x + 50 * h/100, y + 48 * h/100, 80 * h/100, 22 * h/100); //light blue cover
    
    fill(0, 48, 110); //darker blue
    rect(x + 84 * h/100, y + 45 * h/100, 43 * h/100, 9 * h/100); //detail below top stripe
    
    fill(255, 138, 54); //fuschia STRIPES
    rect(x + 46 * h/100, y + 40 * h/100, 87 * h/100, 5 * h/100, 20); //fuschia stripe top
    rect(x + 47 * h/100, y + 82 * h/100, 85 * h/100, 5 * h/100, 20); //stripe bottom
    fill(255, 251, 135, 190); // FUSCHIA EARS Left
    ellipse(x + 52 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //Left
    
    fill(212, 117, 0); //light blue
    rect(x + 90 * h/100, y + 74 * h/100, 32 * h/100, 5 * h/100, 27); //detail below top stripe
    ellipse(x + 84 * h/100, y + 76.5 * h/100, 3 * h/100, 3 * h/100); //smaller detail
    triangle(x + 97 * h/100, y + 89 * h/100, x + 114 * h/100, y + 88 * h/100, x + 104 * h/100, y + 97 * h/100);
    ellipse( x + 93 * h/100, y + 104 * h/100, 24 * h/100, 24 * h/100);
    fill(0, 48, 110); //darkblue
    ellipse( x + 90 * h/100, y + 104 * h/100, 28 * h/100, 28 * h/100);
    
    //left legs
    quad(x + 78 * h/100, y + 127 * h/100, x + 108 * h/100, y + 123 * h/100, x + 111 * h/100, y + 138 * h/100, x + 76 * h/100, y + 138 * h/100);
    fill(212, 117, 0); //lighter blue
    quad(x + 76 * h/100, y + 137 * h/100, x + 111 * h/100, y + 137 * h/100, x + 112 * h/100, y + 154 * h/100, x + 73 * h/100, y + 156 * h/100);

};
var drawPowerUpMale = function(x, y, h)  //power up male
{    
    //var a = color(234, 0, 255);
    //var b = color(255, 196, 0);
    var a = color(56, 54, 199);
    var b = color(255, 166, 0);
    
    for (var i = 0; i < 140; i++)
    {
        stroke(lerpColor(a, b, i/130));
        fill(lerpColor(a, b, i/130));
        //ellipse(183, i + 96, 207, 77);
        ellipse(x + 83 * h/100, y + (i - 4) * h/100, 207 * h/100, 77 * h/100);
       
        //line (0, i, 408, i);
        //line(i + 2, 0, i + 2, 428);
    }
};
var drawPowerUpMaleAstro = function (x, y, h) 
{
    drawPowerUpMale(x,y,50);
    
    noStroke();
    //draw right legs
    fill(0, 48, 110); //darker blue
    quad(x + 110 * h/100, y + 122 * h/100, x + 126 * h/100, y + 101 * h/100, x + 138 * h/100, y + 109 * h/100, x + 120 * h/100, y + 134 * h/100);
    quad(x + 120 * h/100, y + 135 * h/100, x + 145 * h/100, y + 115 * h/100, x + 150 * h/100, y + 127 * h/100, x + 121 * h/100, y + 140 * h/100);
    fill(212, 117, 0); //lighter blue
    quad(x + 121 * h/100, y + 132 * h/100, x + 138 * h/100, y + 109 * h/100, x + 146 * h/100, y + 115 * h/100, x + 120 * h/100, y + 138 * h/100);
    quad(x + 121 * h/100, y + 138 * h/100, x + 150 * h/100, y + 126 * h/100, x + 159 * h/100, y + 146 * h/100, x + 117 * h/100, y + 154 * h/100);
    
    // draw arms
    fill(0, 48, 110); //darker blue
    ellipse(x + 9 * h/100, y + 61 * h/100, 30 * h/100, 30 * h/100);
    ellipse(x + 174 * h/100, y + 63 * h/100, 30 * h/100, 30 * h/100);
    fill(212, 117, 0); //lighter blue
    rect(x + 127 * h/100, y + 44 * h/100, 40 * h/100, 26 * h/100);
    rect(x + 18 * h/100, y + 44 * h/100, 33 * h/100, 26 * h/100);
    quad(x + 8 * h/100, y + 46 * h/100, x + 31 * h/100, y + 44 * h/100, x + 43 * h/100, y + 70 * h/100, x + 19 * h/100, y + 74 * h/100);
    quad(x + 155 * h/100, y + 43 * h/100, x + 184 * h/100, y + 48 * h/100, x + 165 * h/100, y + 77 * h/100, x + 133 * h/100, y + 69 * h/100);
    

    //draw body - rounded rect
    fill(212, 117, 0);  //light blue
    rect(x + 50 * h/100, y + 20 * h/100, 80 * h/100, 70 * h/100);
    ellipse(x + 90 * h/100, y + 20 * h/100, 80 * h/100, 80 * h/100);  //top curve
    ellipse(x + 90 * h/100, y + 90 * h/100, 80 * h/100, 80 * h/100); //bottom curve
    ellipse(x + 90 * h/100, y - 19 * h/100, 20 * h/100, 10 * h/100);
    
    
    //face
    fill(255, 251, 135, 190); // FUSCHIA EARS right
    ellipse(x + 129 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //right
    fill(65, 80, 105); //dark purple
    rect(x + 84 * h/100, y + 11 * h/100, 43* h/100, 33* h/100);
    ellipse(x + 104 * h/100, y + 15 * h/100, 46 * h/100, 40 * h/100); //dark purple inside helmet
    fill(61, 35, 1, 140);
    ellipse(x + 96 * h/100, y + 30 * h/100, 50 * h/100, 50 * h/100);  //inside face
    fill(212, 117, 0); //light blue
    rect(x + 70 * h/100, y + 44 * h/100, 48 * h/100, 28 * h/100); //horizontal
    rect(x + 58 * h/100, y + 5 * h/100, 26 * h/100, 59 * h/100); // vertical light blue cover edges for face
    
    //eyes
    fill(255, 213, 0, 90);
    ellipse(x + 102 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer left
    ellipse(x + 113 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer right
    fill(255, 213, 0);
    ellipse(x + 102 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); //inner eye left
    ellipse(x + 113 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); // inner eye right

    //darker pants + suit detail
    
    fill(0, 48, 110); //darker blue
    rect(x + 50 * h/100, y + 49 * h/100, 77 * h/100, 43 * h/100); //pants
    ellipse(x + 88 * h/100, y + 90 * h/100, 77 * h/100, 80 * h/100); //pants
    rect(x + 47 * h/100, y + 36 * h/100, 30 * h/100, 9 * h/100, 20); //detail linerounded
    rect(x + 50 * h/100, y + 36 * h/100, 34 * h/100, 9 * h/100); //detail corner
    
    fill(212, 117, 0); //light blue
    rect(x + 50 * h/100, y + 48 * h/100, 80 * h/100, 22 * h/100); //light blue cover
    
    fill(0, 48, 110); //darker blue
    rect(x + 84 * h/100, y + 45 * h/100, 43 * h/100, 9 * h/100); //detail below top stripe
    
    fill(255, 138, 54); //fuschia STRIPES
    rect(x + 46 * h/100, y + 40 * h/100, 87 * h/100, 5 * h/100, 20); //fuschia stripe top
    rect(x + 47 * h/100, y + 82 * h/100, 85 * h/100, 5 * h/100, 20); //stripe bottom
    fill(255, 251, 135, 190); // FUSCHIA EARS Left
    ellipse(x + 52 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //Left
    
    fill(212, 117, 0); //light blue
    rect(x + 90 * h/100, y + 74 * h/100, 32 * h/100, 5 * h/100, 27); //detail below top stripe
    ellipse(x + 84 * h/100, y + 76.5 * h/100, 3 * h/100, 3 * h/100); //smaller detail
    triangle(x + 97 * h/100, y + 89 * h/100, x + 114 * h/100, y + 88 * h/100, x + 104 * h/100, y + 97 * h/100);
    ellipse( x + 93 * h/100, y + 104 * h/100, 24 * h/100, 24 * h/100);
    fill(0, 48, 110); //darkblue
    ellipse( x + 90 * h/100, y + 104 * h/100, 28 * h/100, 28 * h/100);
    
    //left legs
    quad(x + 78 * h/100, y + 127 * h/100, x + 108 * h/100, y + 123 * h/100, x + 111 * h/100, y + 138 * h/100, x + 76 * h/100, y + 138 * h/100);
    fill(212, 117, 0); //lighter blue
    quad(x + 76 * h/100, y + 137 * h/100, x + 111 * h/100, y + 137 * h/100, x + 112 * h/100, y + 154 * h/100, x + 73 * h/100, y + 156 * h/100);

}; //powerup male

    //female astronaut
var drawFemaleAstro = function (x, y, h) 
{
    noStroke();
    //draw right legs
    fill(86, 196, 196); //darker blue
    quad(x + 110 * h/100, y + 122 * h/100, x + 126 * h/100, y + 101 * h/100, x + 138 * h/100, y + 109 * h/100, x + 120 * h/100, y + 134 * h/100);
    quad(x + 120 * h/100, y + 135 * h/100, x + 145 * h/100, y + 115 * h/100, x + 150 * h/100, y + 127 * h/100, x + 121 * h/100, y + 140 * h/100);
    fill(125, 240, 240); //lighter blue
    quad(x + 121 * h/100, y + 132 * h/100, x + 138 * h/100, y + 109 * h/100, x + 146 * h/100, y + 115 * h/100, x + 120 * h/100, y + 138 * h/100);
    quad(x + 121 * h/100, y + 138 * h/100, x + 150 * h/100, y + 126 * h/100, x + 159 * h/100, y + 146 * h/100, x + 117 * h/100, y + 154 * h/100);
    
    // draw arms
    fill(86, 196, 196); //darker blue
    ellipse(x + 9 * h/100, y + 61 * h/100, 30 * h/100, 30 * h/100);
    ellipse(x + 174 * h/100, y + 63 * h/100, 30 * h/100, 30 * h/100);
    fill(125, 240, 240); //lighter blue
    rect(x + 127 * h/100, y + 44 * h/100, 40 * h/100, 26 * h/100);
    rect(x + 18 * h/100, y + 44 * h/100, 33 * h/100, 26 * h/100);
    quad(x + 8 * h/100, y + 46 * h/100, x + 31 * h/100, y + 44 * h/100, x + 43 * h/100, y + 70 * h/100, x + 19 * h/100, y + 74 * h/100);
    quad(x + 155 * h/100, y + 43 * h/100, x + 184 * h/100, y + 48 * h/100, x + 165 * h/100, y + 77 * h/100, x + 133 * h/100, y + 69 * h/100);
    

    //draw body - rounded rect
    fill(125, 240, 240);  //light blue
    rect(x + 50 * h/100, y + 20 * h/100, 80 * h/100, 70 * h/100);
    ellipse(x + 90 * h/100, y + 20 * h/100, 80 * h/100, 80 * h/100);  //top curve
    ellipse(x + 90 * h/100, y + 90 * h/100, 80 * h/100, 80 * h/100); //bottom curve
    ellipse(x + 90 * h/100, y - 19 * h/100, 20 * h/100, 10 * h/100);
    
    
    //face
    fill(242, 0, 141, 190); // FUSCHIA EARS right
    ellipse(x + 129 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //right
    fill(138, 57, 120); //dark purple
    rect(x + 84 * h/100, y + 11 * h/100, 43* h/100, 33* h/100);
    ellipse(x + 104 * h/100, y + 15 * h/100, 46 * h/100, 40 * h/100); //dark purple inside helmet
    fill(163, 13, 98, 140);
    ellipse(x + 96 * h/100, y + 30 * h/100, 50 * h/100, 50 * h/100);  //inside face
    fill(125, 240, 240); //light blue
    rect(x + 70 * h/100, y + 44 * h/100, 48 * h/100, 28 * h/100); //horizontal
    rect(x + 58 * h/100, y + 5 * h/100, 26 * h/100, 59 * h/100); // vertical light blue cover edges for face
    
    //eyes
    fill(255, 213, 0, 90);
    ellipse(x + 102 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer left
    ellipse(x + 113 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer right
    fill(255, 213, 0);
    ellipse(x + 102 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); //inner eye left
    ellipse(x + 113 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); // inner eye right

    //darker pants + suit detail
    
    fill(86, 196, 196); //darker blue
    rect(x + 50 * h/100, y + 49 * h/100, 77 * h/100, 43 * h/100); //pants
    ellipse(x + 88 * h/100, y + 90 * h/100, 77 * h/100, 80 * h/100); //pants
    rect(x + 47 * h/100, y + 36 * h/100, 30 * h/100, 9 * h/100, 20); //detail linerounded
    rect(x + 50 * h/100, y + 36 * h/100, 34 * h/100, 9 * h/100); //detail corner
    
    fill(125, 240, 240); //light blue
    rect(x + 50 * h/100, y + 48 * h/100, 80 * h/100, 22 * h/100); //light blue cover
    
    fill(86, 196, 196); //darker blue
    rect(x + 84 * h/100, y + 45 * h/100, 43 * h/100, 9 * h/100); //detail below top stripe
    
    fill(242, 0, 141); //fuschia STRIPES
    rect(x + 46 * h/100, y + 40 * h/100, 87 * h/100, 5 * h/100, 20); //fuschia stripe top
    rect(x + 47 * h/100, y + 82 * h/100, 85 * h/100, 5 * h/100, 20); //stripe bottom
    fill(242, 0, 141, 190); // FUSCHIA EARS Left
    ellipse(x + 52 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //Left
    
    fill(125, 240, 240); //light blue
    rect(x + 90 * h/100, y + 74 * h/100, 32 * h/100, 5 * h/100, 27); //detail below top stripe
    ellipse(x + 84 * h/100, y + 76.5 * h/100, 3 * h/100, 3 * h/100); //smaller detail
    triangle(x + 97 * h/100, y + 89 * h/100, x + 114 * h/100, y + 88 * h/100, x + 104 * h/100, y + 97 * h/100);
    ellipse( x + 93 * h/100, y + 104 * h/100, 24 * h/100, 24 * h/100);
    fill(86, 196, 196); //darkblue
    ellipse( x + 90 * h/100, y + 104 * h/100, 28 * h/100, 28 * h/100);
    
    //left legs
    quad(x + 78 * h/100, y + 127 * h/100, x + 108 * h/100, y + 123 * h/100, x + 111 * h/100, y + 138 * h/100, x + 76 * h/100, y + 138 * h/100);
    fill(125, 240, 240); //lighter blue
    quad(x + 76 * h/100, y + 137 * h/100, x + 111 * h/100, y + 137 * h/100, x + 112 * h/100, y + 154 * h/100, x + 73 * h/100, y + 156 * h/100);

};
var drawPowerUpFemale = function(x, y, h)
{    
    var a = color(255, 204, 0);
    //var b = color(255, 196, 0);
    var b = color(176, 0, 0);
    
    for (var i = 0; i < 140; i++)
    {
        stroke(lerpColor(a, b, i/180));
        fill(lerpColor(a, b, i/150));
        //ellipse(183, i + 96, 207, 77);
        ellipse(x + 83 * h/100, y + (i - 4) * h/100, 207 * h/100, 77 * h/100);
    }
};
var drawPowerUpFemaleAstro = function (x, y, h) 
{
    drawPowerUpFemale(x, y, 50);
    noStroke();
    //draw right legs
    fill(86, 196, 196); //darker blue
    quad(x + 110 * h/100, y + 122 * h/100, x + 126 * h/100, y + 101 * h/100, x + 138 * h/100, y + 109 * h/100, x + 120 * h/100, y + 134 * h/100);
    quad(x + 120 * h/100, y + 135 * h/100, x + 145 * h/100, y + 115 * h/100, x + 150 * h/100, y + 127 * h/100, x + 121 * h/100, y + 140 * h/100);
    fill(125, 240, 240); //lighter blue
    quad(x + 121 * h/100, y + 132 * h/100, x + 138 * h/100, y + 109 * h/100, x + 146 * h/100, y + 115 * h/100, x + 120 * h/100, y + 138 * h/100);
    quad(x + 121 * h/100, y + 138 * h/100, x + 150 * h/100, y + 126 * h/100, x + 159 * h/100, y + 146 * h/100, x + 117 * h/100, y + 154 * h/100);
    
    // draw arms
    fill(86, 196, 196); //darker blue
    ellipse(x + 9 * h/100, y + 61 * h/100, 30 * h/100, 30 * h/100);
    ellipse(x + 174 * h/100, y + 63 * h/100, 30 * h/100, 30 * h/100);
    fill(125, 240, 240); //lighter blue
    rect(x + 127 * h/100, y + 44 * h/100, 40 * h/100, 26 * h/100);
    rect(x + 18 * h/100, y + 44 * h/100, 33 * h/100, 26 * h/100);
    quad(x + 8 * h/100, y + 46 * h/100, x + 31 * h/100, y + 44 * h/100, x + 43 * h/100, y + 70 * h/100, x + 19 * h/100, y + 74 * h/100);
    quad(x + 155 * h/100, y + 43 * h/100, x + 184 * h/100, y + 48 * h/100, x + 165 * h/100, y + 77 * h/100, x + 133 * h/100, y + 69 * h/100);
    

    //draw body - rounded rect
    fill(125, 240, 240);  //light blue
    rect(x + 50 * h/100, y + 20 * h/100, 80 * h/100, 70 * h/100);
    ellipse(x + 90 * h/100, y + 20 * h/100, 80 * h/100, 80 * h/100);  //top curve
    ellipse(x + 90 * h/100, y + 90 * h/100, 80 * h/100, 80 * h/100); //bottom curve
    ellipse(x + 90 * h/100, y - 19 * h/100, 20 * h/100, 10 * h/100);
    
    
    //face
    fill(242, 0, 141, 190); // FUSCHIA EARS right
    ellipse(x + 129 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //right
    fill(138, 57, 120); //dark purple
    rect(x + 84 * h/100, y + 11 * h/100, 43* h/100, 33* h/100);
    ellipse(x + 104 * h/100, y + 15 * h/100, 46 * h/100, 40 * h/100); //dark purple inside helmet
    fill(163, 13, 98, 140);
    ellipse(x + 96 * h/100, y + 30 * h/100, 50 * h/100, 50 * h/100);  //inside face
    fill(125, 240, 240); //light blue
    rect(x + 70 * h/100, y + 44 * h/100, 48 * h/100, 28 * h/100); //horizontal
    rect(x + 58 * h/100, y + 5 * h/100, 26 * h/100, 59 * h/100); // vertical light blue cover edges for face
    
    //eyes
    fill(255, 213, 0, 90);
    ellipse(x + 102 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer left
    ellipse(x + 113 * h/100, y + 20 * h/100, 7 * h/100, 10 * h/100); //outer right
    fill(255, 213, 0);
    ellipse(x + 102 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); //inner eye left
    ellipse(x + 113 * h/100, y + 22 * h/100, 5 * h/100, 7 * h/100); // inner eye right

    //darker pants + suit detail
    
    fill(86, 196, 196); //darker blue
    rect(x + 50 * h/100, y + 49 * h/100, 77 * h/100, 43 * h/100); //pants
    ellipse(x + 88 * h/100, y + 90 * h/100, 77 * h/100, 80 * h/100); //pants
    rect(x + 47 * h/100, y + 36 * h/100, 30 * h/100, 9 * h/100, 20); //detail linerounded
    rect(x + 50 * h/100, y + 36 * h/100, 34 * h/100, 9 * h/100); //detail corner
    
    fill(125, 240, 240); //light blue
    rect(x + 50 * h/100, y + 48 * h/100, 80 * h/100, 22 * h/100); //light blue cover
    
    fill(86, 196, 196); //darker blue
    rect(x + 84 * h/100, y + 45 * h/100, 43 * h/100, 9 * h/100); //detail below top stripe
    
    fill(242, 0, 141); //fuschia STRIPES
    rect(x + 46 * h/100, y + 40 * h/100, 87 * h/100, 5 * h/100, 20); //fuschia stripe top
    rect(x + 47 * h/100, y + 82 * h/100, 85 * h/100, 5 * h/100, 20); //stripe bottom
    fill(242, 0, 141, 190); // FUSCHIA EARS Left
    ellipse(x + 52 * h/100, y + 22 * h/100, 15 * h/100, 20 * h/100); //Left
    
    fill(125, 240, 240); //light blue
    rect(x + 90 * h/100, y + 74 * h/100, 32 * h/100, 5 * h/100, 27); //detail below top stripe
    ellipse(x + 84 * h/100, y + 76.5 * h/100, 3 * h/100, 3 * h/100); //smaller detail
    triangle(x + 97 * h/100, y + 89 * h/100, x + 114 * h/100, y + 88 * h/100, x + 104 * h/100, y + 97 * h/100);
    ellipse( x + 93 * h/100, y + 104 * h/100, 24 * h/100, 24 * h/100);
    fill(86, 196, 196); //darkblue
    ellipse( x + 90 * h/100, y + 104 * h/100, 28 * h/100, 28 * h/100);
    
    //left legs
    quad(x + 78 * h/100, y + 127 * h/100, x + 108 * h/100, y + 123 * h/100, x + 111 * h/100, y + 138 * h/100, x + 76 * h/100, y + 138 * h/100);
    fill(125, 240, 240); //lighter blue
    quad(x + 76 * h/100, y + 137 * h/100, x + 111 * h/100, y + 137 * h/100, x + 112 * h/100, y + 154 * h/100, x + 73 * h/100, y + 156 * h/100);

};

    //draw boss for scene 5
var bossBackHair = function(x,y,bossHeight)
{
    strokeWeight(0.5);
    fill(30,89,114);
    quad(x-bossHeight/10*133,y-bossHeight/10*57,x-bossHeight/10*122,y+bossHeight/10*73,x-bossHeight/10*128,y+bossHeight/10*136,x-bossHeight/10*66,y-bossHeight/10*46);
    rect(x-bossHeight/10*82,y-bossHeight/10*49,bossHeight/10*26,bossHeight/10*74); // back hair
  
};
var bossBackBehindLeg = function(x,y,bossHeight)
{
    fill(42,42,42);
    rect(x+bossHeight/10*-9,y+bossHeight/10*51,bossHeight/10*31,bossHeight/10*117); //back behind leg
};
var bossBackBehindFoot = function(x,y,bossHeight)
{
    fill(0, 0, 0);
    ellipse(x+bossHeight/10*4,y+bossHeight/10*159,bossHeight/10*43,bossHeight/10*25);
    
};
var bossBackBehindankle = function(x,y,bossHeight)
{
        noStroke();
    ellipse(x-bossHeight/10*0,y+bossHeight/10*147,bossHeight/10*18,bossHeight/10*30); // gap in back left foot
    
};
var bossBackFrontLeg = function(x,y,bossHeight)
{
    stroke(0, 0, 0);
    fill(42,42,42);
    rect(x+bossHeight/10*11,y+bossHeight/10*51,bossHeight/10*31,bossHeight/10*117); // back front leg
    
};
var bossBackFortFoot = function(x,y,bossHeight)
{
    
    fill(0, 0, 0);
    ellipse(x-bossHeight/10*-25,y+bossHeight/10*163,bossHeight/10*45,bossHeight/10*27); 
};
var bossFrontBackLeg = function(x,y,bossHeight)
{
   fill(42,42,42);
    rect(x-bossHeight/10*73,y+bossHeight/10*51,bossHeight/10*31,bossHeight/10*117); // front front leg 
};
var bossFrontBackFoot = function(x,y,bossHeight)
{
     fill(0, 0, 0);
    ellipse(x+bossHeight/10*-56,y+bossHeight/10*159,bossHeight/10*45,bossHeight/10*27);
};
var bossFrontFrontLeg = function(x,y,bossHeight)
{
   fill(42,42,42);
    rect(x-bossHeight/10*97,y+bossHeight/10*51,bossHeight/10*31,bossHeight/10*117); 
    
};
var bossFrontFrontFoot = function(x,y,bossHeight)
{
     fill(0, 0, 0);
    ellipse(x-bossHeight/10*80,y+bossHeight/10*163,bossHeight/10*45,bossHeight/10*27);  
};
var bossBackFrontAnkle = function(x,y,bossHeight)
{
     noStroke();
    ellipse(x-bossHeight/10*56,y+bossHeight/10*145,bossHeight/10*18,bossHeight/10*28); // gap in back left foot
};
var bossNeck = function(x,y,bossHeight)
{
    stroke(0, 0, 0);
    fill(42,42,42);
    ellipse(x-bossHeight/10*85,y+bossHeight/10*16,bossHeight/10*44,bossHeight/10*107); // neck  
};
var bossBody = function(x,y,bossHeight)
{
  ellipse(x-bossHeight/10*29,y+bossHeight/10*52,bossHeight/10*145,bossHeight/10*65); // body  
};
var bossHead = function(x,y,bossHeight)
{
  rect(x-bossHeight/10*125,y-bossHeight/10*67,bossHeight/10*61,bossHeight/10*61); // head  
};
var bossTopHair = function(x,y,bossHeight)
{
  fill(30,89,114);
    quad(x-bossHeight/10*138,y-bossHeight/10*65,x-bossHeight/10*137,y-bossHeight/10*52,x-bossHeight/10*54,y-bossHeight/10*42,x-bossHeight/10*59,y-bossHeight/10*76);  
};
var bossHorn = function(x,y,bossHeight)
{
  fill(79, 4, 4);
    quad(x-bossHeight/10*83,y-bossHeight/10*57,x-bossHeight/10*126,y-bossHeight/10*100,x-bossHeight/10*89,y-bossHeight/10*73,x-bossHeight/10*110,y-bossHeight/10*58); // horn  
};
 var bossBackLegAnkle = function(x,y,bossHeight)
 {
    noStroke();
    fill(0, 0, 0);
    ellipse(x+bossHeight/10*25,y+bossHeight/10*152,bossHeight/10*30,bossHeight/10*20);// gap in back front leg
 };
 var bossFrontFrontLegAnkle = function(x,y,bossHeight)
 {
      ellipse(x-bossHeight/10*81,y+bossHeight/10*152,bossHeight/10*30,bossHeight/10*20);// gap in fron front leg
};
var bossEye = function(x,y,bossHeight)
{
  stroke(0, 0, 0);
    fill(0, 255, 106);
    quad(x-bossHeight/10*95,y-bossHeight/10*29,x-bossHeight/10*90,y-bossHeight/10*40,x-bossHeight/10*117,y-bossHeight/10*33,x-bossHeight/10*106,y-bossHeight/10*26); // eye shape
    fill(255, 0, 0);
    ellipse(x-bossHeight/10*108,y-bossHeight/10*31,bossHeight/10*7,bossHeight/10*6);// eye
    strokeWeight(2);
    line(x-bossHeight/10*90,y-bossHeight/10*39,x-bossHeight/10*114,y-bossHeight/10*33);  
};
var bossSmile = function(x,y,bossHeight)
{
    strokeWeight(1);
    line(x-bossHeight/10*93,y-bossHeight/10*19,x-bossHeight/10*110,y-bossHeight/10*10);
};
var boss = function(x,y,bossHeight)
{
    bossBackHair (x,y,bossHeight);
    bossBackBehindLeg(x,y,bossHeight);
    bossBackBehindFoot(x,y,bossHeight);
    bossBackBehindankle(x,y,bossHeight);
    bossBackFrontLeg(x,y,bossHeight);
    bossBackFortFoot(x,y,bossHeight);
    bossFrontBackLeg(x,y,bossHeight);   
    bossFrontBackFoot(x,y,bossHeight);
    bossFrontFrontLeg(x,y,bossHeight);
    bossFrontFrontFoot(x,y,bossHeight);
    bossBackFrontAnkle(x,y,bossHeight);
    bossNeck(x,y,bossHeight);
    bossBody(x,y,bossHeight);
    bossHead(x,y,bossHeight);
    bossTopHair(x,y,bossHeight);
    bossHorn(x,y,bossHeight);
    bossBackLegAnkle(x,y,bossHeight);
    bossFrontFrontLegAnkle(x,y,bossHeight);
    bossEye(x,y,bossHeight);
    bossSmile(x,y,bossHeight);
  
};

    //boss flying wings
var bossWingsFrame1 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y-bossHeight/10*211, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame2 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y-bossHeight/10*149, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame3 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y-bossHeight/10*70, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame4 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*-15, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame5 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*66, x-bossHeight/10*11, y+bossHeight/10*88, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame6 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*83, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame7 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*158, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame8 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*205, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame9 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*205, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame10 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*246, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame11 = function(x,y,bossHeight)
{
    bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*281, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWingsFrame12 = function(x,y,bossHeight)
{
bezier(x-bossHeight/10*9, y+bossHeight/10*40, x+bossHeight/10*250, y-bossHeight/10*53, x-bossHeight/10*11, y+bossHeight/10*305, x-bossHeight/10*55, y+bossHeight/10*40);
};
var bossWings = function(x,y,bossHeight)
{
    fill(255, 0, 0);
    if (ticks === 1)
    {
bossWingsFrame1(x,y,bossHeight);
}
if (ticks === 2)
    {
bossWingsFrame2(x,y,bossHeight);
}
if (ticks === 3)
    {
bossWingsFrame3(x,y,bossHeight);
}
if (ticks === 4)
    {
bossWingsFrame4(x,y,bossHeight);
}
if (ticks === 5)
    {
bossWingsFrame5(x,y,bossHeight);
}
if (ticks === 6)
    {
bossWingsFrame6(x,y,bossHeight);
}
if (ticks === 7)
    {
bossWingsFrame7(x,y,bossHeight);
}
if (ticks === 8)
    {
bossWingsFrame8(x,y,bossHeight);
}
if (ticks === 9)
    {
bossWingsFrame9(x,y,bossHeight);
}
if (ticks === 10)
    {
bossWingsFrame10(x,y,bossHeight);
}
if (ticks === 11)
    {
bossWingsFrame11(x,y,bossHeight);
}
if (ticks === 12)
    {
bossWingsFrame12(x,y,bossHeight);
}
if (ticks === 13)
    {
bossWingsFrame11(x,y,bossHeight);
}
if (ticks === 14)
    {
bossWingsFrame10(x,y,bossHeight);
}
if (ticks === 15)
    {
bossWingsFrame9(x,y,bossHeight);
}
if (ticks === 16)
    {
bossWingsFrame8(x,y,bossHeight);
}
if (ticks === 17)
    {
bossWingsFrame7(x,y,bossHeight);
}
if (ticks === 18)
    {
bossWingsFrame6(x,y,bossHeight);
}
if (ticks === 19)
    {
bossWingsFrame5(x,y,bossHeight);
}
if (ticks === 20)
    {
bossWingsFrame4(x,y,bossHeight);
}
if (ticks === 21)
    {
bossWingsFrame3(x,y,bossHeight);
}
if (ticks === 22)
    {
bossWingsFrame2(x,y,bossHeight);
}
if (ticks === 23)
    {
bossWingsFrame1(x,y,bossHeight);
}
if (ticks === 22)
    {
ticks = 0;
}
};

    //draw enemy scene 4
var enemy = function(x,y,height)
{

 strokeWeight(0.5);
    //fill(46, 46, 46);
    fill(43, 36, 19);
    ellipse(x+height/10*2,y+height/10*13,height/10*64,height/10*36);
    fill(245, 125, 213);
      fill(235, 154, 33);
    ellipse(x-height/10*21,y+height/10*11,height/10*6,height/10*6);
    strokeWeight(3);
      line(x-height/10*28,y+height/10*13,x-height/10*16,y+height/10*3);//eyebrow
    line(x-height/10*5,y+height/10*45,x-height/10*5,y+height/10*31);//legs
    line(x-height/10*15,y+height/10*48,x-height/10*15,y+height/10*28);
    line(x+height/10*24,y+height/10*48,x+height/10*24,y+height/10*26);
    line(x+height/10*14,y+height/10*44,x+height/10*14,y+height/10*30);
    strokeWeight(0.5);
     //fill(218, 252, 0);
     //fill(6, 184, 125);
     //fill(0, 255, 204);
     fill(227, 20, 20);
};
var enemyWingsFrame1 = function(x,y,enemyHeight)
{
    
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y-enemyHeight/10*211, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame2 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y-enemyHeight/10*149, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame3 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y-enemyHeight/10*70, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame4 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*-15, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame5 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*66, x-enemyHeight/10*11, y+enemyHeight/10*88, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame6 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*83, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame7 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*158, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame8 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*205, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame9 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*205, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame10 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*246, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame11 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*281, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWingsFrame12 = function(x,y,enemyHeight)
{
    bezier(x-enemyHeight/10*9, y+enemyHeight/10*40, x+enemyHeight/10*250, y-enemyHeight/10*53, x-enemyHeight/10*11, y+enemyHeight/10*305, x-enemyHeight/10*55, y+enemyHeight/10*40);
};
var enemyWings = function(x,y,enemyHeight)
{
    if (ticks === 1)
    {
    enemyWingsFrame1(x,y,enemyHeight);
}
if (ticks === 2)
    {
    enemyWingsFrame2(x,y,enemyHeight);
}
if (ticks === 3)
    {
    enemyWingsFrame3(x,y,enemyHeight);
}
if (ticks === 4)
    {
    enemyWingsFrame4(x,y,enemyHeight);
}
if (ticks === 5)
    {
    enemyWingsFrame5(x,y,enemyHeight);
}
if (ticks === 6)
    {
    enemyWingsFrame6(x,y,enemyHeight);
}
if (ticks === 7)
    {
    enemyWingsFrame7(x,y,enemyHeight);
}
if (ticks === 8)
    {
    enemyWingsFrame8(x,y,enemyHeight);
}
if (ticks === 9)
    {
    enemyWingsFrame9(x,y,enemyHeight);
}
if (ticks === 10)
    {
    enemyWingsFrame10(x,y,enemyHeight);
}
if (ticks === 11)
    {
    enemyWingsFrame11(x,y,enemyHeight);
}
if (ticks === 12)
    {
    enemyWingsFrame12(x,y,enemyHeight);
}
if (ticks === 13)
    {
    enemyWingsFrame11(x,y,enemyHeight);
}
if (ticks === 14)
    {
    enemyWingsFrame10(x,y,enemyHeight);
}
if (ticks === 15)
    {
    enemyWingsFrame9(x,y,enemyHeight);
}
if (ticks === 16)
    {
    enemyWingsFrame8(x,y,enemyHeight);
}
if (ticks === 17)
    {
    enemyWingsFrame7(x,y,enemyHeight);
}
if (ticks === 18)
    {
    enemyWingsFrame6(x,y,enemyHeight);
}
if (ticks === 19)
    {
    enemyWingsFrame5(x,y,enemyHeight);
}
if (ticks === 20)
    {
    enemyWingsFrame4(x,y,enemyHeight);
}
if (ticks === 21)
    {
    enemyWingsFrame3(x,y,enemyHeight);
}
if (ticks === 22)
    {
    enemyWingsFrame2(x,y,enemyHeight);
}
if (ticks === 23)
    {
    enemyWingsFrame1(x,y,enemyHeight);
}
if (ticks === 22)
    {
    ticks = 0;
}
};

    //Kat's draw female character
var femalecharacterSmile = function(x,y,femalecharacter1Height)
{
    noFill();
    stroke(0, 0, 0);
    line(x+femalecharacter1Height/10*35,y+femalecharacter1Height/10*-11,x+femalecharacter1Height/10*28,y-femalecharacter1Height/10*11);
    line(x+femalecharacter1Height/10*29,y+femalecharacter1Height/10*-11,x+femalecharacter1Height/10*24,y-femalecharacter1Height/10*13);
    
};
var femalecharacterEye = function(x,y,femalecharacter1Height)
{
    stroke(0, 0, 0);
    ellipse(x-(femalecharacter1Height/10*-59),y-(femalecharacter1Height/10*40),femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    fill(0, 0, 0);
     ellipse(x-(femalecharacter1Height/10*-62),y-(femalecharacter1Height/10*40),femalecharacter1Height/10*10,femalecharacter1Height/10*8);
};
var femalecharacterClosedWings = function(x,y,femalecharacter1Height)
{
     fill(250, 250, 250);
    stroke(0, 0, 0);
    ellipse(x+femalecharacter1Height/10*7,y+femalecharacter1Height/10*10,femalecharacter1Height/10*46,femalecharacter1Height/10*25); //wing femalecharacterBody
    arc(x+femalecharacter1Height/10*6, y-femalecharacter1Height/10*-3, femalecharacter1Height/10*10,femalecharacter1Height/10* 9, 90, 270);// wing touchs
    arc(x+femalecharacter1Height/10*6, y+femalecharacter1Height/10*10, femalecharacter1Height/10*10, femalecharacter1Height/10*9, 90, 270);// wing touchs
    arc(x+femalecharacter1Height/10*6, y+femalecharacter1Height/10*16, femalecharacter1Height/10*10,femalecharacter1Height/10*9, 90, 270);//wing touchs
    line(x-femalecharacter1Height/10*8,y-femalecharacter1Height/10,x-femalecharacter1Height/10*2,y-femalecharacter1Height/10);// top line
    line(x-femalecharacter1Height/10,y-femalecharacter1Height/10*-8,x-femalecharacter1Height/10*16,y-femalecharacter1Height/10*-8); // middle line
     line(x-femalecharacter1Height/10*2,y+femalecharacter1Height/10*14,x-femalecharacter1Height/10*16,y+femalecharacter1Height/10*14); // bottom line
};

var femalecharacterMovingBackParts = function(x,y,femalecharacter1Height)
{
       fill(255, 255, 255);
    stroke(0, 0, 0);
     quad(x -femalecharacter1Height/10*25,y +femalecharacter1Height/10*85,x+femalecharacter1Height/10*3, y+femalecharacter1Height/10*85,x+femalecharacter1Height/10*3,y+femalecharacter1Height/10*14,x-femalecharacter1Height/10*25,y+femalecharacter1Height/10*14); // back back leg
     quad(x+femalecharacter1Height/10*17,y + femalecharacter1Height/10*11,x +femalecharacter1Height/10* 45, y +femalecharacter1Height/10* 11, x +femalecharacter1Height/10* 45,y +femalecharacter1Height/10* 81,x + femalecharacter1Height/10*17,y + femalecharacter1Height/10*81); // top bottom leg
     ellipse(x - femalecharacter1Height/10*27,y +femalecharacter1Height/10* 20,femalecharacter1Height/10*31,femalecharacter1Height/10*43); // back joint thing
   
    
}; 
var femalecharacterMovingFrontParts = function(x,y,femalecharacter1Height)
{
    stroke(0, 0, 0);
  quad(x+femalecharacter1Height/10*35,y + femalecharacter1Height/10*15,x +femalecharacter1Height/10* 61,y +femalecharacter1Height/10* 15, x + femalecharacter1Height/10*61,y +femalecharacter1Height/10* 85, x + femalecharacter1Height/10*35, y +femalecharacter1Height/10* 84); // front top leg
  quad(x-femalecharacter1Height/10*36,y+femalecharacter1Height/10*14,x-femalecharacter1Height/10*8,y +femalecharacter1Height/10* 14,x-femalecharacter1Height/10*8,y+femalecharacter1Height/10*92,x-femalecharacter1Height/10*36,y+femalecharacter1Height/10*92); // back top leg 
    
};

var femalecharacterBody = function(x,y,femalecharacter1Height)
{
     rect(x +femalecharacter1Height/10* 35,y-femalecharacter1Height/10*20,femalecharacter1Height/10*25,femalecharacter1Height/10*29); // neck
     ellipse(x + femalecharacter1Height/10*14,y +femalecharacter1Height/10* 12,femalecharacter1Height/10*108,femalecharacter1Height/10*43); // femalecharacterBody
  
     ellipse(x+femalecharacter1Height/10*52,y - femalecharacter1Height/10*38,femalecharacter1Height/10*50,femalecharacter1Height/10*55); // head
     ellipse(x -femalecharacter1Height/10* 27,y +femalecharacter1Height/10* 20,femalecharacter1Height/10*31,femalecharacter1Height/10*43); // back joint thing
   noStroke();
      ellipse(x+femalecharacter1Height/10*48,y+femalecharacter1Height/10*27,femalecharacter1Height/10*20,femalecharacter1Height/10*18); //block top lines
     ellipse(x-femalecharacter1Height/10*24,y+femalecharacter1Height/10*23,femalecharacter1Height/10*24,femalecharacter1Height/10*42); //block back lines
     ellipse(x-femalecharacter1Height/10*20,y+femalecharacter1Height/10*13,femalecharacter1Height/10*31,femalecharacter1Height/10*28); // block back top lines
  
     fill(255, 255, 255);
    
};
var femalecharacterTopHair = function(x,y,femalecharacter1Height)
{
    fill(172, 53, 181);
    ellipse(x+femalecharacter1Height/10*1,y+femalecharacter1Height/10*1,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*10,y+femalecharacter1Height/10*1,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*20,y+femalecharacter1Height/10*1,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*30,y+femalecharacter1Height/10*1,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*40,y+femalecharacter1Height/10*1,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*50,y+femalecharacter1Height/10*1,femalecharacter1Height/10*20,femalecharacter1Height/10*20); // top layer
    
    ellipse(x+femalecharacter1Height/10*1,y+femalecharacter1Height/10*10,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*10,y+femalecharacter1Height/10*10,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*20,y+femalecharacter1Height/10*10,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*30,y+femalecharacter1Height/10*10,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*40,y+femalecharacter1Height/10*10,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*50,y+femalecharacter1Height/10*10,femalecharacter1Height/10*20,femalecharacter1Height/10*20); // middle layer
     ellipse(x+femalecharacter1Height/10*1,y+femalecharacter1Height/10*20,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*10,y+femalecharacter1Height/10*20,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*20,y+femalecharacter1Height/10*20,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*30,y+femalecharacter1Height/10*20,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*40,y+femalecharacter1Height/10*20,femalecharacter1Height/10*20,femalecharacter1Height/10*20);
    ellipse(x+femalecharacter1Height/10*50,y+femalecharacter1Height/10*20,femalecharacter1Height/10*20,femalecharacter1Height/10*20); // bottom layer
    noStroke();
       
    rect(x-femalecharacter1Height/14*7,y-femalecharacter1Height/7*3,femalecharacter1Height/10*62,femalecharacter1Height/10*30);
  
};
var femalecharacterEar = function(x,y,femalecharacter1Height)
{
    stroke(0, 0, 0);
    fill(255, 255, 255);
  ellipse(x+femalecharacter1Height/10*30,y+femalecharacter1Height/10*-66,femalecharacter1Height/10*20,femalecharacter1Height/10*47);  
  noStroke();

    ellipse(x+femalecharacter1Height/10*36,y+femalecharacter1Height/10*-48,femalecharacter1Height/10*15,femalecharacter1Height/10*15);
    stroke(0, 0, 0);
};
var femalecharacterTailHair  = function(x,y, femalecharacter1Height)
{
   fill(172, 53, 181);
   stroke(0, 0, 0);
    
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*35,femalecharacter1Height/10*27,femalecharacter1Height/10*34); // tail hair
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*29,femalecharacter1Height/10*26,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*56,femalecharacter1Height/10*27,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*60,femalecharacter1Height/10*26,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*71,femalecharacter1Height/10*27,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*71,femalecharacter1Height/10*26,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*88,femalecharacter1Height/10*27,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*90,femalecharacter1Height/10*26,femalecharacter1Height/10*34); 
    noStroke();
    rect(x-femalecharacter1Height/10*34,y+femalecharacter1Height/10*26,femalecharacter1Height/10*26,femalecharacter1Height/10*68);
};
var femalecharacterBottonHair  = function(x,y,femalecharacter1Height)
{
    fill(172, 53, 181);
  
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*35,femalecharacter1Height/10*27,femalecharacter1Height/10*34); // back hair
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*29,femalecharacter1Height/10*26,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*56,femalecharacter1Height/10*27,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*60,femalecharacter1Height/10*26,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*71,femalecharacter1Height/10*27,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*71,femalecharacter1Height/10*26,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*26,y+femalecharacter1Height/10*88,femalecharacter1Height/10*27,femalecharacter1Height/10*34);
    ellipse(x-femalecharacter1Height/10*11,y+femalecharacter1Height/10*90,femalecharacter1Height/10*26,femalecharacter1Height/10*34);  
};

    //Female unicorn wing
var femaleCharacter1OpenWing = function(x,y,femalecharacter1Height)
{
    var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
    var xWing = x-femalecharacter1Height/10*35;
    var yWing = y-femalecharacter1Height/10*67;
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*14),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
    
  
};
 
 var femaleCharacter1Open2Wing = function(x,y,femalecharacter1Height)
 {
  var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*3),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
   
    
 };
  var femaleCharacter1Open1Wing = function(x,y,femalecharacter1Height)
 {
  var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
  
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*7),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
    
    
 };
   var femaleCharacter1OpenFlatWing = function(x,y,femalecharacter1Height)
 {
  var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
   
    for(var j =0; j<2; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*-1),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
    
  
    
 };
  var femaleCharacter1NegativeWing = function(x,y,femalecharacter1Height)
{
    var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
    
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*-14),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
    
  
};
    var femaleCharacter1Negative2Wing = function(x,y,femalecharacter1Height)
 {
  var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*-7),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
   
  
    
 };
  var negative1Wing = function(x,y,femalecharacter1Height)
 {
  var wingY = y-femalecharacter1Height/10*93;
    var wingX = x-femalecharacter1Height/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(255, 255, 255);
            ellipse(wingX+femalecharacter1Height/10*(i*18),wingY+femalecharacter1Height/10*(i*-7),femalecharacter1Height/10*31,femalecharacter1Height/10*20);
            
        }
        wingY = wingY +femalecharacter1Height/10*16;
        wingX = wingX + femalecharacter1Height/10*4;
    }
    
  
    
 };

var femaleCharacter1 = function(x,y,femalecharacter1Height)
{
    femalecharacterMovingBackParts(x,y,femalecharacter1Height);
    femalecharacterMovingFrontParts(x,y,femalecharacter1Height);
      femalecharacterBody(x,y,femalecharacter1Height);
     stroke(0, 0, 0);
     femalecharacterEye(x,y,femalecharacter1Height);
     femalecharacterBottonHair (x+femalecharacter1Height/10*34,y-femalecharacter1Height/10*88,femalecharacter1Height-1);
        femalecharacterTailHair (x+femalecharacter1Height/10*-37,y-femalecharacter1Height/10*7,femalecharacter1Height-femalecharacter1Height/10);
          femalecharacterSmile(x+femalecharacter1Height/10*27,y-femalecharacter1Height/10*11,femalecharacter1Height);
    femalecharacterEar(x,y,femalecharacter1Height);
    femalecharacterTopHair(x+femalecharacter1Height/10*43,y-femalecharacter1Height/10*77,femalecharacter1Height-femalecharacter1Height/10*1);
};
var femaleCharacterWings = function(x,y,h)
{
    
    if (ticks === 1)
    {
        femaleCharacter1OpenWing(x,y,h);
    }
    
    if (ticks === 2)
       {
         femaleCharacter1Open1Wing(x,y+h/10*22,h);
       }
    if (ticks === 3)
       {
           femaleCharacter1Open2Wing(x,y+h/10*57,h);
       }
   if (ticks === 4)
       {
            femaleCharacter1OpenFlatWing(x,y+h/10*81,h);   
       }  
    if (ticks === 5)
       {
            femaleCharacter1Negative2Wing(x,y+h/10*117,h);
       }
   if (ticks === 6)
       {
           negative1Wing(x,y+h/10*130,h);
       }   
   if (ticks === 7)
       {
           femaleCharacter1NegativeWing(x,y+h/10*152,h);
       }
    if (ticks === 8)
       {
           negative1Wing(x,y+h/10*130,h);
       } 
   if (ticks === 9)
       {
         femaleCharacter1Negative2Wing(x,y+h/10*127,h);
       } 
   if (ticks === 10)
       {
            femaleCharacter1OpenFlatWing(x,y+h/10*81,h);   
       }
    if (ticks === 11)
       {
         femaleCharacter1Open2Wing(x,y+h/10*57,h);
           
       }
     if (ticks === 12)
     {
        femaleCharacter1Open1Wing(x,y+h/10*22,h);
     }
      if (ticks === 13)
     {
       femaleCharacter1OpenWing(x,y,h);
     }
    if (ticks === 14)
     {
        ticks = 0;

     }
    
};

    //Powered Up Unicorn Female
var femaleCharacterPoweredUpsmile = function(x,y,femaleCharacter1PoweredUpHeight)
{
    noFill();
    stroke(0, 0, 0);
    line(x+femaleCharacter1PoweredUpHeight/10*35,y+femaleCharacter1PoweredUpHeight/10*-11,x+femaleCharacter1PoweredUpHeight/10*28,y-femaleCharacter1PoweredUpHeight/10*11);
    line(x+femaleCharacter1PoweredUpHeight/10*29,y+femaleCharacter1PoweredUpHeight/10*-11,x+femaleCharacter1PoweredUpHeight/10*24,y-femaleCharacter1PoweredUpHeight/10*13);
    
};
var femaleCharacterPoweredUpEye = function(x,y,femaleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
    
    ellipse(x-(femaleCharacter1PoweredUpHeight/10*-59),y-(femaleCharacter1PoweredUpHeight/10*40),femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    fill(0, 0, 0);
     ellipse(x-(femaleCharacter1PoweredUpHeight/10*-62),y-(femaleCharacter1PoweredUpHeight/10*40),femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*8);
};
var femaleCharacterPoweredUpBackParts = function(x,y,femaleCharacter1PoweredUpHeight)
{
       fill(255, 255, 255);
    stroke(0, 0, 0);
     quad(x -femaleCharacter1PoweredUpHeight/10*25,y +femaleCharacter1PoweredUpHeight/10*85,x+femaleCharacter1PoweredUpHeight/10*3, y+femaleCharacter1PoweredUpHeight/10*85,x+femaleCharacter1PoweredUpHeight/10*3,y+femaleCharacter1PoweredUpHeight/10*14,x-femaleCharacter1PoweredUpHeight/10*25,y+femaleCharacter1PoweredUpHeight/10*14); // back back leg
     quad(x+femaleCharacter1PoweredUpHeight/10*17,y + femaleCharacter1PoweredUpHeight/10*11,x +femaleCharacter1PoweredUpHeight/10* 45, y +femaleCharacter1PoweredUpHeight/10* 11, x +femaleCharacter1PoweredUpHeight/10* 45,y +femaleCharacter1PoweredUpHeight/10* 81,x + femaleCharacter1PoweredUpHeight/10*17,y + femaleCharacter1PoweredUpHeight/10*81); // top bottom leg
     ellipse(x - femaleCharacter1PoweredUpHeight/10*27,y +femaleCharacter1PoweredUpHeight/10* 20,femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*43); // back joint thing
   
    
}; 
var femaleCharacterPoweredUpFrontParts = function(x,y,femaleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
  quad(x+femaleCharacter1PoweredUpHeight/10*35,y + femaleCharacter1PoweredUpHeight/10*15,x +femaleCharacter1PoweredUpHeight/10* 61,y +femaleCharacter1PoweredUpHeight/10* 15, x + femaleCharacter1PoweredUpHeight/10*61,y +femaleCharacter1PoweredUpHeight/10* 85, x + femaleCharacter1PoweredUpHeight/10*35, y +femaleCharacter1PoweredUpHeight/10* 84); // front top leg
  quad(x-femaleCharacter1PoweredUpHeight/10*36,y+femaleCharacter1PoweredUpHeight/10*14,x-femaleCharacter1PoweredUpHeight/10*8,y +femaleCharacter1PoweredUpHeight/10* 14,x-femaleCharacter1PoweredUpHeight/10*8,y+femaleCharacter1PoweredUpHeight/10*92,x-femaleCharacter1PoweredUpHeight/10*36,y+femaleCharacter1PoweredUpHeight/10*92); // back top leg 
    
};

var femaleCharacterPoweredUpBody = function(x,y,femaleCharacter1PoweredUpHeight)
{
     rect(x +femaleCharacter1PoweredUpHeight/10* 35,y-femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*25,femaleCharacter1PoweredUpHeight/10*29); // neck
     ellipse(x + femaleCharacter1PoweredUpHeight/10*14,y +femaleCharacter1PoweredUpHeight/10* 12,femaleCharacter1PoweredUpHeight/10*108,femaleCharacter1PoweredUpHeight/10*43); // femaleCharacterPoweredUpBody
  
     ellipse(x+femaleCharacter1PoweredUpHeight/10*52,y - femaleCharacter1PoweredUpHeight/10*38,femaleCharacter1PoweredUpHeight/10*50,femaleCharacter1PoweredUpHeight/10*55); // head
     ellipse(x -femaleCharacter1PoweredUpHeight/10* 27,y +femaleCharacter1PoweredUpHeight/10* 20,femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*43); // back joint thing
   noStroke();
      ellipse(x+femaleCharacter1PoweredUpHeight/10*48,y+femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*18); //block top lines
     ellipse(x-femaleCharacter1PoweredUpHeight/10*24,y+femaleCharacter1PoweredUpHeight/10*23,femaleCharacter1PoweredUpHeight/10*24,femaleCharacter1PoweredUpHeight/10*42); //block back lines
     ellipse(x-femaleCharacter1PoweredUpHeight/10*20,y+femaleCharacter1PoweredUpHeight/10*13,femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*28); // block back top lines
  
     fill(255, 255, 255);
    
};
var femaleCharacterPoweredUpTopHair = function(x,y,femaleCharacter1PoweredUpHeight)
{
    fill(250 - y * 2, 0 + y, 255 - y * 0.25);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*1,y+femaleCharacter1PoweredUpHeight/10*1,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*10,y+femaleCharacter1PoweredUpHeight/10*1,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*20,y+femaleCharacter1PoweredUpHeight/10*1,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*30,y+femaleCharacter1PoweredUpHeight/10*1,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*40,y+femaleCharacter1PoweredUpHeight/10*1,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*50,y+femaleCharacter1PoweredUpHeight/10*1,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20); // top layer
    
    ellipse(x+femaleCharacter1PoweredUpHeight/10*1,y+femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*10,y+femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*20,y+femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*30,y+femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*40,y+femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*50,y+femaleCharacter1PoweredUpHeight/10*10,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20); // middle layer
     ellipse(x+femaleCharacter1PoweredUpHeight/10*1,y+femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*10,y+femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*20,y+femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*30,y+femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*40,y+femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20);
    ellipse(x+femaleCharacter1PoweredUpHeight/10*50,y+femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*20); // bottom layer
    noStroke();
       
    rect(x-femaleCharacter1PoweredUpHeight/14*7,y-femaleCharacter1PoweredUpHeight/7*3,femaleCharacter1PoweredUpHeight/10*62,femaleCharacter1PoweredUpHeight/10*30);
  
};
var femaleCharacterPoweredUpEar = function(x,y,femaleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
    fill(255, 255, 255);
  ellipse(x+femaleCharacter1PoweredUpHeight/10*30,y+femaleCharacter1PoweredUpHeight/10*-66,femaleCharacter1PoweredUpHeight/10*20,femaleCharacter1PoweredUpHeight/10*47);  
  noStroke();
    ellipse(x+femaleCharacter1PoweredUpHeight/10*36,y+femaleCharacter1PoweredUpHeight/10*-48,femaleCharacter1PoweredUpHeight/10*15,femaleCharacter1PoweredUpHeight/10*15);
    stroke(0, 0, 0);
};
var femaleCharacterPoweredUpTailHair = function(x,y, femaleCharacter1PoweredUpHeight)
{
   fill(250 - y * 2, 0 + y, 255 - y * 0.25);
   stroke(0, 0, 0);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*35,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34); // tail hair
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*29,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*56,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*60,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*71,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*71,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*88,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*90,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34); 
    noStroke();
    rect(x-femaleCharacter1PoweredUpHeight/10*34,y+femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*68);
};
var femaleCharacterPoweredUpBottonHair = function(x,y,femaleCharacter1PoweredUpHeight)
{
    fill(250 - y * 2, 0 + y, 255 - y * 0.25);
  
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*35,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34); // back hair
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*29,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*56,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*60,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*71,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*71,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*26,y+femaleCharacter1PoweredUpHeight/10*88,femaleCharacter1PoweredUpHeight/10*27,femaleCharacter1PoweredUpHeight/10*34);
    ellipse(x-femaleCharacter1PoweredUpHeight/10*11,y+femaleCharacter1PoweredUpHeight/10*90,femaleCharacter1PoweredUpHeight/10*26,femaleCharacter1PoweredUpHeight/10*34);  
};
var femaleCharacterPoweredUpHorn = function(x,y,femaleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
    fill(255, 255, 255);
    triangle(x+femaleCharacter1PoweredUpHeight/10*19,y-femaleCharacter1PoweredUpHeight/10*28,x+femaleCharacter1PoweredUpHeight/10*40,y-femaleCharacter1PoweredUpHeight/10*52,x+femaleCharacter1PoweredUpHeight/10*28,y-femaleCharacter1PoweredUpHeight/10*23);
    
};
var femaleCharacter1PoweredUpOpenWing = function(x,y,femaleCharacter1PoweredUpHeight)
{
    var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
    var xWing = x-femaleCharacter1PoweredUpHeight/10*35;
    var yWing = y-femaleCharacter1PoweredUpHeight/10*67;
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*14),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
    
  
};
 var femaleCharacter1PoweredUpOpen2Wing = function(x,y,femaleCharacter1PoweredUpHeight)
 {
  var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*3),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
   
    
 };
  var femaleCharacter1PoweredUpOpen1Wing = function(x,y,femaleCharacter1PoweredUpHeight)
 {
  var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
  
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*7),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
    
    
 };
   var femaleCharacter1PoweredUpOpenFlatWing = function(x,y,femaleCharacter1PoweredUpHeight)
 {
  var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
   
    for(var j =0; j<2; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*-1),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
    
 };
  var femaleCharacter1PoweredUpNegativeWing = function(x,y,femaleCharacter1PoweredUpHeight)
{
    var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*-14),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
    
  
};
 var femaleCharacter1PoweredUpNegative2Wing = function(x,y,femaleCharacter1PoweredUpHeight)
 {
  var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*-7),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
   
  
    
 };
  var femaleCharacterPoweredUpNegative1Wing = function(x,y,femaleCharacter1PoweredUpHeight)
 {
  var wingY = y-femaleCharacter1PoweredUpHeight/10*93;
    var wingX = x-femaleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(250 - y * 2, 0 + y, 255 - y * 0.25);
            ellipse(wingX+femaleCharacter1PoweredUpHeight/10*(i*18),wingY+femaleCharacter1PoweredUpHeight/10*(i*-7),femaleCharacter1PoweredUpHeight/10*31,femaleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +femaleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + femaleCharacter1PoweredUpHeight/10*4;
    }
    
  
    
 };
var femaleCharacter1PoweredUp = function(x,y,femaleCharacter1PoweredUpHeight)
{
    strokeWeight(0.5);
    femaleCharacterPoweredUpBackParts(x,y,femaleCharacter1PoweredUpHeight);
    femaleCharacterPoweredUpFrontParts(x,y,femaleCharacter1PoweredUpHeight);
      femaleCharacterPoweredUpBody(x,y,femaleCharacter1PoweredUpHeight);
     stroke(0, 0, 0);
     femaleCharacterPoweredUpEye(x,y,femaleCharacter1PoweredUpHeight);
     femaleCharacterPoweredUpBottonHair(x+femaleCharacter1PoweredUpHeight/10*34,y-femaleCharacter1PoweredUpHeight/10*88,femaleCharacter1PoweredUpHeight-1);
        femaleCharacterPoweredUpTailHair(x+femaleCharacter1PoweredUpHeight/10*-37,y-femaleCharacter1PoweredUpHeight/10*7,femaleCharacter1PoweredUpHeight-femaleCharacter1PoweredUpHeight/10);
          femaleCharacterPoweredUpsmile(x+femaleCharacter1PoweredUpHeight/10*27,y-femaleCharacter1PoweredUpHeight/10*11,femaleCharacter1PoweredUpHeight);
    femaleCharacterPoweredUpEar(x,y,femaleCharacter1PoweredUpHeight);
    femaleCharacterPoweredUpTopHair(x+femaleCharacter1PoweredUpHeight/10*43,y-femaleCharacter1PoweredUpHeight/10*77,femaleCharacter1PoweredUpHeight-femaleCharacter1PoweredUpHeight/10*1);
    femaleCharacterPoweredUpHorn(x+femaleCharacter1PoweredUpHeight/10*35,y+femaleCharacter1PoweredUpHeight/10*-37,femaleCharacter1PoweredUpHeight+femaleCharacter1PoweredUpHeight/10*2);
};
var femaleCharacterWingsPoweredUp = function(x,y,h)
{
    
    if (ticks === 1)
    {
        femaleCharacter1PoweredUpOpenWing(x,y,h);
    }
    
    if (ticks === 2)
       {
         femaleCharacter1PoweredUpOpen1Wing(x,y+h/10*22,h);
       }
    if (ticks === 3)
       {
           femaleCharacter1PoweredUpOpen2Wing(x,y+h/10*57,h);
       }
   if (ticks === 4)
       {
            femaleCharacter1PoweredUpOpenFlatWing(x,y+h/10*81,h);   
       }  
    if (ticks === 5)
       {
            femaleCharacter1PoweredUpNegative2Wing(x,y+h/10*117,h);
       }
   if (ticks === 6)
       {
           femaleCharacterPoweredUpNegative1Wing(x,y+h/10*130,h);
       }   
   if (ticks === 7)
       {
           femaleCharacter1PoweredUpNegativeWing(x,y+h/10*152,h);
       }
    if (ticks === 8)
       {
           femaleCharacterPoweredUpNegative1Wing(x,y+h/10*130,h);
       } 
   if (ticks === 9)
       {
         femaleCharacter1PoweredUpNegative2Wing(x,y+h/10*127,h);
       } 
   if (ticks === 10)
       {
            femaleCharacter1PoweredUpOpenFlatWing(x,y+h/10*81,h);   
       }
    if (ticks === 11)
       {
         femaleCharacter1PoweredUpOpen2Wing(x,y+h/10*57,h);
           
       }
     if (ticks === 12)
     {
        femaleCharacter1PoweredUpOpen1Wing(x,y+h/10*22,h);
     }
      if (ticks === 13)
     {
       femaleCharacter1PoweredUpOpenWing(x,y,h);
     }
    if (ticks === 14)
     {
        ticks = 0;

     }
    
};

    //Kat's Male Character
var maleCharacterSmile = function(x,y,malecharacter1Height)
{
    noFill();
    stroke(0, 0, 0);
    line(x+malecharacter1Height/10*35,y+malecharacter1Height/10*-11,x+malecharacter1Height/10*28,y-malecharacter1Height/10*11);
    line(x+malecharacter1Height/10*29,y+malecharacter1Height/10*-11,x+malecharacter1Height/10*24,y-malecharacter1Height/10*13);
    
};
var maleCharacterEye = function(x,y,malecharacter1Height)
{
    stroke(0, 0, 0);
    ellipse(x-(malecharacter1Height/10*-59),y-(malecharacter1Height/10*40),malecharacter1Height/10*20,malecharacter1Height/10*20);
    fill(0, 0, 0);
     ellipse(x-(malecharacter1Height/10*-62),y-(malecharacter1Height/10*40),malecharacter1Height/10*10,malecharacter1Height/10*8);
};

var maleCharacterClosedWings = function(x,y,malecharacter1Height)
{
     fill(97, 97, 97);
    stroke(0, 0, 0);
    ellipse(x+malecharacter1Height/10*7,y+malecharacter1Height/10*10,malecharacter1Height/10*46,malecharacter1Height/10*25); //wing maleCharacterBody
    arc(x+malecharacter1Height/10*6, y-malecharacter1Height/10*-3, malecharacter1Height/10*10,malecharacter1Height/10* 9, 90, 270);// wing touchs
    arc(x+malecharacter1Height/10*6, y+malecharacter1Height/10*10, malecharacter1Height/10*10, malecharacter1Height/10*9, 90, 270);// wing touchs
    arc(x+malecharacter1Height/10*6, y+malecharacter1Height/10*16, malecharacter1Height/10*10,malecharacter1Height/10*9, 90, 270);//wing touchs
    line(x-malecharacter1Height/10*8,y-malecharacter1Height/10,x-malecharacter1Height/10*2,y-malecharacter1Height/10);// top line
    line(x-malecharacter1Height/10,y-malecharacter1Height/10*-8,x-malecharacter1Height/10*16,y-malecharacter1Height/10*-8); // middle line
     line(x-malecharacter1Height/10*2,y+malecharacter1Height/10*14,x-malecharacter1Height/10*16,y+malecharacter1Height/10*14); // bottom line
};

var maleCharacterMovingBackParts = function(x,y,malecharacter1Height)
{
       fill(97, 97, 97);
    stroke(0, 0, 0);
     quad(x -malecharacter1Height/10*25,y +malecharacter1Height/10*85,x+malecharacter1Height/10*3, y+malecharacter1Height/10*85,x+malecharacter1Height/10*3,y+malecharacter1Height/10*14,x-malecharacter1Height/10*25,y+malecharacter1Height/10*14); // back back leg
     quad(x+malecharacter1Height/10*17,y + malecharacter1Height/10*11,x +malecharacter1Height/10* 45, y +malecharacter1Height/10* 11, x +malecharacter1Height/10* 45,y +malecharacter1Height/10* 81,x + malecharacter1Height/10*17,y + malecharacter1Height/10*81); // top bottom leg
     ellipse(x - malecharacter1Height/10*27,y +malecharacter1Height/10* 20,malecharacter1Height/10*31,malecharacter1Height/10*43); // back joint thing
   
    
}; 
var maleCharacterMovingFrontParts = function(x,y,malecharacter1Height)
{
    stroke(0, 0, 0);
  quad(x+malecharacter1Height/10*35,y + malecharacter1Height/10*15,x +malecharacter1Height/10* 61,y +malecharacter1Height/10* 15, x + malecharacter1Height/10*61,y +malecharacter1Height/10* 85, x + malecharacter1Height/10*35, y +malecharacter1Height/10* 84); // front top leg
  quad(x-malecharacter1Height/10*36,y+malecharacter1Height/10*14,x-malecharacter1Height/10*8,y +malecharacter1Height/10* 14,x-malecharacter1Height/10*8,y+malecharacter1Height/10*92,x-malecharacter1Height/10*36,y+malecharacter1Height/10*92); // back top leg 
    
};

var maleCharacterBody = function(x,y,malecharacter1Height)
{
     rect(x +malecharacter1Height/10* 35,y-malecharacter1Height/10*20,malecharacter1Height/10*25,malecharacter1Height/10*29); // neck
     ellipse(x + malecharacter1Height/10*14,y +malecharacter1Height/10* 12,malecharacter1Height/10*108,malecharacter1Height/10*43); // maleCharacterBody
  
     ellipse(x+malecharacter1Height/10*52,y - malecharacter1Height/10*38,malecharacter1Height/10*50,malecharacter1Height/10*55); // head
     ellipse(x -malecharacter1Height/10* 27,y +malecharacter1Height/10* 20,malecharacter1Height/10*31,malecharacter1Height/10*43); // back joint thing
   noStroke();
      ellipse(x+malecharacter1Height/10*48,y+malecharacter1Height/10*27,malecharacter1Height/10*20,malecharacter1Height/10*18); //block top lines
     ellipse(x-malecharacter1Height/10*24,y+malecharacter1Height/10*23,malecharacter1Height/10*24,malecharacter1Height/10*42); //block back lines
     ellipse(x-malecharacter1Height/10*20,y+malecharacter1Height/10*13,malecharacter1Height/10*31,malecharacter1Height/10*28); // block back top lines
  
     fill(255, 255, 255);
    
};
var maleCharacterTopHair = function(x,y,malecharacter1Height)
{
    fill(25, 69, 17);
    ellipse(x+malecharacter1Height/10*1,y+malecharacter1Height/10*1,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*10,y+malecharacter1Height/10*1,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*20,y+malecharacter1Height/10*1,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*30,y+malecharacter1Height/10*1,malecharacter1Height/10*20,malecharacter1Height/10*20);
   // top layer
    
    ellipse(x+malecharacter1Height/10*1,y+malecharacter1Height/10*10,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*10,y+malecharacter1Height/10*10,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*20,y+malecharacter1Height/10*10,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*30,y+malecharacter1Height/10*10,malecharacter1Height/10*20,malecharacter1Height/10*20);
   // middle layer
     ellipse(x+malecharacter1Height/10*1,y+malecharacter1Height/10*20,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*10,y+malecharacter1Height/10*20,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*20,y+malecharacter1Height/10*20,malecharacter1Height/10*20,malecharacter1Height/10*20);
    ellipse(x+malecharacter1Height/10*30,y+malecharacter1Height/10*20,malecharacter1Height/10*20,malecharacter1Height/10*20);
    // bottom layer
    noStroke();
       
    rect(x-malecharacter1Height/14*7,y-malecharacter1Height/7*3,malecharacter1Height/10*42,malecharacter1Height/10*22);
  
};
var maleCharacterEar = function(x,y,malecharacter1Height)
{
    stroke(0, 0, 0);
    fill(97, 97, 97);
  ellipse(x+malecharacter1Height/10*30,y+malecharacter1Height/10*-66,malecharacter1Height/10*20,malecharacter1Height/10*47);  
  noStroke();

    ellipse(x+malecharacter1Height/10*36,y+malecharacter1Height/10*-48,malecharacter1Height/10*15,malecharacter1Height/10*15);
    stroke(0, 0, 0);
};
var maleCharacterTailHair = function(x,y, malecharacter1Height)
{
   fill(25, 69, 17);
   stroke(0, 0, 0);
    
    ellipse(x-malecharacter1Height/10*26,y+malecharacter1Height/10*35,malecharacter1Height/10*27,malecharacter1Height/10*34); // tail hair
    ellipse(x-malecharacter1Height/10*11,y+malecharacter1Height/10*29,malecharacter1Height/10*26,malecharacter1Height/10*34);
    ellipse(x-malecharacter1Height/10*26,y+malecharacter1Height/10*56,malecharacter1Height/10*27,malecharacter1Height/10*34);
    ellipse(x-malecharacter1Height/10*11,y+malecharacter1Height/10*60,malecharacter1Height/10*26,malecharacter1Height/10*34);
   
    noStroke();
    rect(x-malecharacter1Height/10*34,y+malecharacter1Height/10*26,malecharacter1Height/10*26,malecharacter1Height/10*36);
};
var maleCharacterBottonHair = function(x,y,malecharacter1Height)
{
    fill(25, 69, 17);
  
    ellipse(x-malecharacter1Height/10*26,y+malecharacter1Height/10*35,malecharacter1Height/10*27,malecharacter1Height/10*34); // back hair
    ellipse(x-malecharacter1Height/10*11,y+malecharacter1Height/10*29,malecharacter1Height/10*26,malecharacter1Height/10*34);
    ellipse(x-malecharacter1Height/10*26,y+malecharacter1Height/10*56,malecharacter1Height/10*27,malecharacter1Height/10*34);
    ellipse(x-malecharacter1Height/10*11,y+malecharacter1Height/10*60,malecharacter1Height/10*26,malecharacter1Height/10*34);
   
};
    
    //Male Character Wings
var malecharacter1OpenWing = function(x,y,malecharacter1Height)
{
    var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
    var xWing = x-malecharacter1Height/10*35;
    var yWing = y-malecharacter1Height/10*67;
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*14),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
    
  
};
 var malecharacter1Open2Wing = function(x,y,malecharacter1Height)
 {
  var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*3),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
   
    
 };
  var malecharacter1Open1Wing = function(x,y,malecharacter1Height)
 {
  var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
  
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*7),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
    
    
 };
   var malecharacter1OpenFlatWing = function(x,y,malecharacter1Height)
 {
  var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
   
    for(var j =0; j<2; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*-1),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
    
  
    
 };
  var malecharacter1NegativeWing = function(x,y,malecharacter1Height)
{
    var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
    
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*-14),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
    
  
};

 var malecharacter1Negative2Wing = function(x,y,malecharacter1Height)
 {
  var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*-7),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
   
  
    
 };
  var negative1Wing = function(x,y,malecharacter1Height)
 {
  var wingY = y-malecharacter1Height/10*93;
    var wingX = x-malecharacter1Height/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
             fill(97, 97, 97);
            ellipse(wingX+malecharacter1Height/10*(i*18),wingY+malecharacter1Height/10*(i*-7),malecharacter1Height/10*31,malecharacter1Height/10*20);
            
        }
        wingY = wingY +malecharacter1Height/10*16;
        wingX = wingX + malecharacter1Height/10*4;
    }
    
  
    
 };
var malecharacter1 = function(x,y,malecharacter1Height)
{
    strokeWeight(0.5);
    maleCharacterMovingBackParts(x,y,malecharacter1Height);
    maleCharacterMovingFrontParts(x,y,malecharacter1Height);
      maleCharacterBody(x,y,malecharacter1Height);
     
     maleCharacterEye(x,y,malecharacter1Height);
     maleCharacterBottonHair(x+malecharacter1Height/10*34,y-malecharacter1Height/10*88,malecharacter1Height-1);
        maleCharacterTailHair(x+malecharacter1Height/10*-37,y-malecharacter1Height/10*7,malecharacter1Height-malecharacter1Height/10);
          maleCharacterSmile(x+malecharacter1Height/10*27,y-malecharacter1Height/10*11,malecharacter1Height);
    maleCharacterEar(x,y,malecharacter1Height);
    maleCharacterTopHair(x+malecharacter1Height/10*43,y-malecharacter1Height/10*77,malecharacter1Height-malecharacter1Height/10*1);
};
var malecharacterWings = function(x,y,h)
{
    
    if (ticks === 1)
    {
        malecharacter1OpenWing(x,y,h);
    }
    
    if (ticks === 2)
       {
         malecharacter1Open1Wing(x,y+h/10*22,h);
       }
    if (ticks === 3)
       {
           malecharacter1Open2Wing(x,y+h/10*57,h);
       }
   if (ticks === 4)
       {
            malecharacter1OpenFlatWing(x,y+h/10*81,h);   
       }  
    if (ticks === 5)
       {
            malecharacter1Negative2Wing(x,y+h/10*117,h);
       }
   if (ticks === 6)
       {
           negative1Wing(x,y+h/10*130,h);
       }   
   if (ticks === 7)
       {
           malecharacter1NegativeWing(x,y+h/10*152,h);
       }
    if (ticks === 8)
       {
           negative1Wing(x,y+h/10*130,h);
       } 
   if (ticks === 9)
       {
         malecharacter1Negative2Wing(x,y+h/10*127,h);
       } 
   if (ticks === 10)
       {
            malecharacter1OpenFlatWing(x,y+h/10*81,h);   
       }
    if (ticks === 11)
       {
         malecharacter1Open2Wing(x,y+h/10*57,h);
           
       }
     if (ticks === 12)
     {
        malecharacter1Open1Wing(x,y+h/10*22,h);
     }
      if (ticks === 13)
     {
       malecharacter1OpenWing(x,y,h);
     }
    if (ticks === 14)
     {
        ticks = 0;

     }
    
};

    //Powered Up Male Unicorn
var maleCharacter1PoweredUpSmile = function(x,y,maleCharacter1PoweredUpHeight)
{
    noFill();
    stroke(0, 0, 0);
    line(x+maleCharacter1PoweredUpHeight/10*35,y+maleCharacter1PoweredUpHeight/10*-11,x+maleCharacter1PoweredUpHeight/10*28,y-maleCharacter1PoweredUpHeight/10*11);
    line(x+maleCharacter1PoweredUpHeight/10*29,y+maleCharacter1PoweredUpHeight/10*-11,x+maleCharacter1PoweredUpHeight/10*24,y-maleCharacter1PoweredUpHeight/10*13);
    
};
var maleCharacter1PoweredUpEye = function(x,y,maleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
    ellipse(x-(maleCharacter1PoweredUpHeight/10*-59),y-(maleCharacter1PoweredUpHeight/10*40),maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    fill(0, 0, 0);
     ellipse(x-(maleCharacter1PoweredUpHeight/10*-62),y-(maleCharacter1PoweredUpHeight/10*40),maleCharacter1PoweredUpHeight/10*10,maleCharacter1PoweredUpHeight/10*8);
};

var maleCharacter1PoweredUpBackParts = function(x,y,maleCharacter1PoweredUpHeight)
{
       fill(97, 97, 97);
    stroke(0, 0, 0);
     quad(x -maleCharacter1PoweredUpHeight/10*25,y +maleCharacter1PoweredUpHeight/10*85,x+maleCharacter1PoweredUpHeight/10*3, y+maleCharacter1PoweredUpHeight/10*85,x+maleCharacter1PoweredUpHeight/10*3,y+maleCharacter1PoweredUpHeight/10*14,x-maleCharacter1PoweredUpHeight/10*25,y+maleCharacter1PoweredUpHeight/10*14); // back back leg
     quad(x+maleCharacter1PoweredUpHeight/10*17,y + maleCharacter1PoweredUpHeight/10*11,x +maleCharacter1PoweredUpHeight/10* 45, y +maleCharacter1PoweredUpHeight/10* 11, x +maleCharacter1PoweredUpHeight/10* 45,y +maleCharacter1PoweredUpHeight/10* 81,x + maleCharacter1PoweredUpHeight/10*17,y + maleCharacter1PoweredUpHeight/10*81); // top bottom leg
     ellipse(x - maleCharacter1PoweredUpHeight/10*27,y +maleCharacter1PoweredUpHeight/10* 20,maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*43); // back joint thing
   
    
}; 
var maleCharacter1PoweredUpFrontParts = function(x,y,maleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
  quad(x+maleCharacter1PoweredUpHeight/10*35,y + maleCharacter1PoweredUpHeight/10*15,x +maleCharacter1PoweredUpHeight/10* 61,y +maleCharacter1PoweredUpHeight/10* 15, x + maleCharacter1PoweredUpHeight/10*61,y +maleCharacter1PoweredUpHeight/10* 85, x + maleCharacter1PoweredUpHeight/10*35, y +maleCharacter1PoweredUpHeight/10* 84); // front top leg
  quad(x-maleCharacter1PoweredUpHeight/10*36,y+maleCharacter1PoweredUpHeight/10*14,x-maleCharacter1PoweredUpHeight/10*8,y +maleCharacter1PoweredUpHeight/10* 14,x-maleCharacter1PoweredUpHeight/10*8,y+maleCharacter1PoweredUpHeight/10*92,x-maleCharacter1PoweredUpHeight/10*36,y+maleCharacter1PoweredUpHeight/10*92); // back top leg 
    
};

var maleCharacter1PoweredUpBody = function(x,y,maleCharacter1PoweredUpHeight)
{
     rect(x +maleCharacter1PoweredUpHeight/10* 35,y-maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*25,maleCharacter1PoweredUpHeight/10*29); // neck
     ellipse(x + maleCharacter1PoweredUpHeight/10*14,y +maleCharacter1PoweredUpHeight/10* 12,maleCharacter1PoweredUpHeight/10*108,maleCharacter1PoweredUpHeight/10*43); // MaleCharacter1PoweredUpBody
  
     ellipse(x+maleCharacter1PoweredUpHeight/10*52,y - maleCharacter1PoweredUpHeight/10*38,maleCharacter1PoweredUpHeight/10*50,maleCharacter1PoweredUpHeight/10*55); // head
     ellipse(x -maleCharacter1PoweredUpHeight/10* 27,y +maleCharacter1PoweredUpHeight/10* 20,maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*43); // back joint thing
   noStroke();
      ellipse(x+maleCharacter1PoweredUpHeight/10*48,y+maleCharacter1PoweredUpHeight/10*27,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*18); //block top lines
     ellipse(x-maleCharacter1PoweredUpHeight/10*24,y+maleCharacter1PoweredUpHeight/10*23,maleCharacter1PoweredUpHeight/10*24,maleCharacter1PoweredUpHeight/10*42); //block back lines
     ellipse(x-maleCharacter1PoweredUpHeight/10*20,y+maleCharacter1PoweredUpHeight/10*13,maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*28); // block back top lines
  
     fill(255, 255, 255);
    
};
var maleCharacter1PoweredUpTopHair = function(x,y,maleCharacter1PoweredUpHeight)
{
    fill(0 + y * 2, 0 + y, 0 + y * 0.25);
    ellipse(x+maleCharacter1PoweredUpHeight/10*1,y+maleCharacter1PoweredUpHeight/10*1,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*10,y+maleCharacter1PoweredUpHeight/10*1,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*20,y+maleCharacter1PoweredUpHeight/10*1,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*30,y+maleCharacter1PoweredUpHeight/10*1,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
   // top layer
    
    ellipse(x+maleCharacter1PoweredUpHeight/10*1,y+maleCharacter1PoweredUpHeight/10*10,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*10,y+maleCharacter1PoweredUpHeight/10*10,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*20,y+maleCharacter1PoweredUpHeight/10*10,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*30,y+maleCharacter1PoweredUpHeight/10*10,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
   // middle layer
     ellipse(x+maleCharacter1PoweredUpHeight/10*1,y+maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*10,y+maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*20,y+maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    ellipse(x+maleCharacter1PoweredUpHeight/10*30,y+maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*20);
    // bottom layer
    noStroke();
       
    rect(x-maleCharacter1PoweredUpHeight/14*7,y-maleCharacter1PoweredUpHeight/7*3,maleCharacter1PoweredUpHeight/10*42,maleCharacter1PoweredUpHeight/10*22);
  
};
var maleCharacter1PoweredUpEar = function(x,y,maleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
    fill(97, 97, 97);
  ellipse(x+maleCharacter1PoweredUpHeight/10*30,y+maleCharacter1PoweredUpHeight/10*-66,maleCharacter1PoweredUpHeight/10*20,maleCharacter1PoweredUpHeight/10*47);  
  noStroke();

    ellipse(x+maleCharacter1PoweredUpHeight/10*36,y+maleCharacter1PoweredUpHeight/10*-48,maleCharacter1PoweredUpHeight/10*15,maleCharacter1PoweredUpHeight/10*15);
    stroke(0, 0, 0);
};
var maleCharacter1PoweredUpTailHair = function(x,y, maleCharacter1PoweredUpHeight)
{
   fill(0 + y * 2, 0 + y, 0 + y * 0.25);
   stroke(0, 0, 0);
    
    ellipse(x-maleCharacter1PoweredUpHeight/10*26,y+maleCharacter1PoweredUpHeight/10*35,maleCharacter1PoweredUpHeight/10*27,maleCharacter1PoweredUpHeight/10*34); // tail hair
    ellipse(x-maleCharacter1PoweredUpHeight/10*11,y+maleCharacter1PoweredUpHeight/10*29,maleCharacter1PoweredUpHeight/10*26,maleCharacter1PoweredUpHeight/10*34);
    ellipse(x-maleCharacter1PoweredUpHeight/10*26,y+maleCharacter1PoweredUpHeight/10*56,maleCharacter1PoweredUpHeight/10*27,maleCharacter1PoweredUpHeight/10*34);
    ellipse(x-maleCharacter1PoweredUpHeight/10*11,y+maleCharacter1PoweredUpHeight/10*60,maleCharacter1PoweredUpHeight/10*26,maleCharacter1PoweredUpHeight/10*34);
   
    noStroke();
    rect(x-maleCharacter1PoweredUpHeight/10*34,y+maleCharacter1PoweredUpHeight/10*26,maleCharacter1PoweredUpHeight/10*26,maleCharacter1PoweredUpHeight/10*42);
};
var maleCharacter1PoweredUpBottonHair = function(x,y,maleCharacter1PoweredUpHeight)
{
    fill(0 + y * 2, 0 + y, 0 + y * 0.25);
  
    ellipse(x-maleCharacter1PoweredUpHeight/10*26,y+maleCharacter1PoweredUpHeight/10*35,maleCharacter1PoweredUpHeight/10*27,maleCharacter1PoweredUpHeight/10*34); // back hair
    ellipse(x-maleCharacter1PoweredUpHeight/10*11,y+maleCharacter1PoweredUpHeight/10*29,maleCharacter1PoweredUpHeight/10*26,maleCharacter1PoweredUpHeight/10*34);
    ellipse(x-maleCharacter1PoweredUpHeight/10*26,y+maleCharacter1PoweredUpHeight/10*56,maleCharacter1PoweredUpHeight/10*27,maleCharacter1PoweredUpHeight/10*34);
    ellipse(x-maleCharacter1PoweredUpHeight/10*11,y+maleCharacter1PoweredUpHeight/10*60,maleCharacter1PoweredUpHeight/10*26,maleCharacter1PoweredUpHeight/10*34);
   
};

    //Powered Up Wings Male
var maleCharacter1PoweredUpOpenWing = function(x,y,maleCharacter1PoweredUpHeight)
{
    var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
    var xWing = x-maleCharacter1PoweredUpHeight/10*35;
    var yWing = y-maleCharacter1PoweredUpHeight/10*67;
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*14),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
    
  
};
 var maleCharacter1PoweredUpOpen2Wing = function(x,y,maleCharacter1PoweredUpHeight)
 {
  var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*3),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
   
    
 };
  var maleCharacter1PoweredUpOpen1Wing = function(x,y,maleCharacter1PoweredUpHeight)
 {
  var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
  
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*7),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
    
    
 };
   var maleCharacter1PoweredUpOpenFlatWing = function(x,y,maleCharacter1PoweredUpHeight)
 {
  var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
   
    for(var j =0; j<2; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*-1),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
    
  
    
 };
  var maleCharacter1PoweredUpNegativeWing = function(x,y,maleCharacter1PoweredUpHeight)
{
    var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<4; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*-14),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
    
  
};
 var maleCharacter1PoweredUpNegative2Wing = function(x,y,maleCharacter1PoweredUpHeight)
 {
  var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*-7),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
   
  
    
 };
  var maleCharacter1PoweredUpNegative1Wing = function(x,y,maleCharacter1PoweredUpHeight)
 {
  var wingY = y-maleCharacter1PoweredUpHeight/10*93;
    var wingX = x-maleCharacter1PoweredUpHeight/10*53;
    
    for(var j =0; j<3; j++)
    { 
        for(var i = 0; i<4; i++)
        {
            stroke(0, 0, 0);
            fill(0 + y * 2, 0 + y, 0 + y * 0.25);
            ellipse(wingX+maleCharacter1PoweredUpHeight/10*(i*18),wingY+maleCharacter1PoweredUpHeight/10*(i*-7),maleCharacter1PoweredUpHeight/10*31,maleCharacter1PoweredUpHeight/10*20);
            
        }
        wingY = wingY +maleCharacter1PoweredUpHeight/10*16;
        wingX = wingX + maleCharacter1PoweredUpHeight/10*4;
    }
    
  
    
 };

var maleCharacter1PoweredUpHorn = function(x,y,maleCharacter1PoweredUpHeight)
{
    stroke(0, 0, 0);
    fill(97, 97, 97);

    triangle(x+ maleCharacter1PoweredUpHeight/10*19,y+ maleCharacter1PoweredUpHeight/10*-28,x+ maleCharacter1PoweredUpHeight/10*40,y+ maleCharacter1PoweredUpHeight/10*-52,x+ maleCharacter1PoweredUpHeight/10*28,y+ maleCharacter1PoweredUpHeight/10*-23);
    
};

var maleCharacter1PoweredUp = function(x,y,maleCharacter1PoweredUpHeight)
{
    strokeWeight(0.5);
    maleCharacter1PoweredUpBackParts(x,y,maleCharacter1PoweredUpHeight);
    maleCharacter1PoweredUpFrontParts(x,y,maleCharacter1PoweredUpHeight);
      maleCharacter1PoweredUpBody(x,y,maleCharacter1PoweredUpHeight);
     stroke(0, 0, 0);
     maleCharacter1PoweredUpEye(x,y,maleCharacter1PoweredUpHeight);
     maleCharacter1PoweredUpBottonHair(x+maleCharacter1PoweredUpHeight/10*34,y-maleCharacter1PoweredUpHeight/10*88,maleCharacter1PoweredUpHeight-1);
        maleCharacter1PoweredUpTailHair(x+maleCharacter1PoweredUpHeight/10*-37,y-maleCharacter1PoweredUpHeight/10*7,maleCharacter1PoweredUpHeight-maleCharacter1PoweredUpHeight/10);
          maleCharacter1PoweredUpSmile(x+maleCharacter1PoweredUpHeight/10*27,y-maleCharacter1PoweredUpHeight/10*11,maleCharacter1PoweredUpHeight);
    maleCharacter1PoweredUpEar(x,y,maleCharacter1PoweredUpHeight);
    maleCharacter1PoweredUpTopHair(x+maleCharacter1PoweredUpHeight/10*43,y-maleCharacter1PoweredUpHeight/10*77,maleCharacter1PoweredUpHeight-maleCharacter1PoweredUpHeight/10*1);
    maleCharacter1PoweredUpHorn(x+maleCharacter1PoweredUpHeight/10*29,y-maleCharacter1PoweredUpHeight/10*34,maleCharacter1PoweredUpHeight+maleCharacter1PoweredUpHeight/10*2);
};
var maleCharacter1PoweredUpWings = function(x,y,h)
{
    
    if (ticks === 1)
    {
        maleCharacter1PoweredUpOpenWing(x,y,h);
    }
    
    if (ticks === 2)
       {
         maleCharacter1PoweredUpOpen1Wing(x,y+h/10*22,h);
       }
    if (ticks === 3)
       {
           maleCharacter1PoweredUpOpen2Wing(x,y+h/10*57,h);
       }
   if (ticks === 4)
       {
            maleCharacter1PoweredUpOpenFlatWing(x,y+h/10*81,h);   
       }  
    if (ticks === 5)
       {
            maleCharacter1PoweredUpNegative2Wing(x,y+h/10*117,h);
       }
   if (ticks === 6)
       {
           maleCharacter1PoweredUpNegative1Wing(x,y+h/10*130,h);
       }   
   if (ticks === 7)
       {
           maleCharacter1PoweredUpNegativeWing(x,y+h/10*152,h);
       }
    if (ticks === 8)
       {
           maleCharacter1PoweredUpNegative1Wing(x,y+h/10*130,h);
       } 
   if (ticks === 9)
       {
         maleCharacter1PoweredUpNegative2Wing(x,y+h/10*127,h);
       } 
   if (ticks === 10)
       {
            maleCharacter1PoweredUpOpenFlatWing(x,y+h/10*81,h);   
       }
    if (ticks === 11)
       {
         maleCharacter1PoweredUpOpen2Wing(x,y+h/10*57,h);
           
       }
     if (ticks === 12)
     {
        maleCharacter1PoweredUpOpen1Wing(x,y+h/10*22,h);
     }
      if (ticks === 13)
     {
       maleCharacter1PoweredUpOpenWing(x,y,h);
     }
    if (ticks === 14)
     {
        ticks = 0;

     }
    
};

    //Game Scene Cloud + Jewel
var cloud = function(x,y,cloudSize)
{
noStroke();
//darker purple
//fill(255, 187, 0);
//fill(176, 56, 0);
fill(255, 204, 0);
ellipse(x+cloudSize/10*78,y+cloudSize/10*14,cloudSize/10*36,cloudSize/10*29);
ellipse(x+cloudSize/10*65,y+cloudSize/10*20,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*46,y+cloudSize/10*23,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*23,y+cloudSize/10*27,cloudSize/10*34,cloudSize/10*30);
ellipse(x+cloudSize/10*1,y+cloudSize/10*19,cloudSize/10*31,cloudSize/10*30);
ellipse(x+cloudSize/10*-12,y+cloudSize/10*15,cloudSize/10*41,cloudSize/10*33);
//sparks cloud
//fill(135, 2, 44);
//fill(247, 120, 74);
fill(84, 6, 67);
ellipse(x+cloudSize/10*-15,y+cloudSize/10*-33,cloudSize/10*22,cloudSize/10*22);
ellipse(x+cloudSize/10*-25,y+cloudSize/10*-32,cloudSize/10*18,cloudSize/10*16);
ellipse(x+cloudSize/10*-5,y+cloudSize/10*-33,cloudSize/10*18,cloudSize/10*15);
ellipse(x+cloudSize/10*77,y+cloudSize/10*-9,cloudSize/10*27,cloudSize/10*23);
ellipse(x+cloudSize/10*63,y+cloudSize/10*-7,cloudSize/10*22,cloudSize/10*22);
//fill(255, 106, 0);
//pink purple
fill(9, 12, 38);
ellipse(x+cloudSize/10*75,y+cloudSize/10*12,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*20,y+cloudSize/10*22,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*44,y+cloudSize/10*20,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*46,y+cloudSize/10*18,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*21,y+cloudSize/10*4,cloudSize/10*30,cloudSize/10*30);
ellipse(x-cloudSize/10*1,y+cloudSize/10*16,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*40,y+cloudSize/10*-1,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*63,y+cloudSize/10*17,cloudSize/10*30,cloudSize/10*30);
ellipse(x-cloudSize/10*19,y+cloudSize/10*13,cloudSize/10*30,cloudSize/10*30);
ellipse(x-cloudSize/10*1,y+cloudSize/10*-1,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*23,y-cloudSize/10*11,cloudSize/10*30,cloudSize/10*30);
ellipse(x+cloudSize/10*62,y+cloudSize/10*3,cloudSize/10*30,cloudSize/10*30);
//dots color 1
fill(142, 255, 43);
ellipse(x-cloudSize/10*-39,y+cloudSize/10*-4,cloudSize/10*2,cloudSize/10*2);
ellipse(x+cloudSize/10*76,y+cloudSize/10*11,cloudSize/10*4,cloudSize/10*4);
//color 2 dots
fill(153, 0, 158);
ellipse(x+cloudSize/10*62,y-cloudSize/10*-25,cloudSize/10*4,cloudSize/10*4);
ellipse(x+cloudSize/10*18,y+cloudSize/10*18,cloudSize/10*3,cloudSize/10*3);
//dots color 3
/*fill(255, 81, 0);
ellipse(x+cloudSize/10*-12,y+cloudSize/10*10,cloudSize/10*5,cloudSize/10*5);
ellipse(x+cloudSize/10*15,y+cloudSize/10*-5,cloudSize/10*5,cloudSize/10*5);
ellipse(x+cloudSize/10*49,y+cloudSize/10*12,cloudSize/10*5,cloudSize/10*5);*/

};
var jewel = function(x,y,jewelHeight)
{
fill(136, 3, 237);
rect(x+jewelHeight/10*17,y,jewelHeight/10*50,jewelHeight/10*50);
fill(125, 26, 212);
quad(x+jewelHeight/10*17,y+jewelHeight/10*51,x+jewelHeight/10*17,y,x-jewelHeight/10*1,y-jewelHeight/10*27,x-jewelHeight/10*1,y+jewelHeight/10*73);
fill(110, 2, 204);
quad(x+jewelHeight/10*86,y+jewelHeight/10*73,x+jewelHeight/10*85,y-jewelHeight/10*26,x+jewelHeight/10*68,y,x+jewelHeight/10*68,y+jewelHeight/10*51);
fill(98, 0, 179);
quad(x+jewelHeight/10*86,y+jewelHeight/10*74,x+jewelHeight/10*67,y+jewelHeight/10*50,x+jewelHeight/10*18,y+jewelHeight/10*50,x-jewelHeight/10*1,y+jewelHeight/10*73);
fill(138, 13, 247);
quad(x+jewelHeight/10*86,y-jewelHeight/10*27,x+jewelHeight/10*67,y,x+jewelHeight/10*18,y+jewelHeight/10*1,x-jewelHeight/10*1,y-jewelHeight/10*27);
};
var Jewel = function(x,y)
{
  this.x =x;
  this.y =y;
};
Jewel.prototype.draw = function() 
{
    jewel(this.x,this.y,3);
};

            //push new jewel into array
        var jewels = [];
        for (var i = 0; i < 40; i++) {  
            jewels.push(new Jewel(random(20,300), random(20, 300)));
}

            //boss scene bullet
            
    //Pegasus horn bullet class
var unicornBullet = function(x, y, uniHeight) 
{
    noStroke();
    fill(255, 221, 0);
    triangle(x + 0 * uniHeight/100, y + 76 * uniHeight/100, x + 200 * uniHeight/100, y + 140 * uniHeight/100, x + 0 * uniHeight/100, y + 200 * uniHeight/100);
    fill(0, 255, 166);
    triangle(x + 40 * uniHeight/100, y + 96 * uniHeight/100, x + 200 * uniHeight/100, y + 140 * uniHeight/100, x + 40 * uniHeight/100, y + 180 * uniHeight/100);
    fill(153, 0, 255);
    triangle(x + 70 * uniHeight/100, y + 110 * uniHeight/100, x + 210 * uniHeight/100, y + 140 * uniHeight/100, x + 70 * uniHeight/100, y + 165 * uniHeight/100);
    
};
var uniBullet = function(x, y) 
{
    this.x = x;
    this.y = y;
};
uniBullet.prototype.draw = function() { //draw method drawing bitmoji
    //this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    unicornBullet(this.x, this.y, 60);    
};
uniBullet.prototype.hop = function() {             //hop method
    this.x += 15; //lower y, move up
};

    //Astronaut Fire Bullet
var feetFire2 = function(x,y,fireHeight)
{
fill(255, 0, 0);
stroke(255, 0, 0);
ellipse(x-fireHeight/10*-89,y+fireHeight/10*-2,fireHeight/10*68,fireHeight/10*70);
fill(255, 128, 0);
ellipse(x-fireHeight/10*-89,y+fireHeight/10*-2,fireHeight/10*60,fireHeight/10*59);
fill(255, 230, 0);
ellipse(x-fireHeight/10*-89,y+fireHeight/10*-2,fireHeight/10*52,fireHeight/10*-52);
};
var bulletFire = function(x,y,fireHeight)
{
fill(255, 0, 0);
stroke(255, 0, 0);
ellipse(x-fireHeight/10*-17,y+fireHeight/10*15,fireHeight/10*69,fireHeight/10*25);
fill(255, 128, 0);
ellipse(x-fireHeight/10*-23,y+fireHeight/10*15,fireHeight/10*53,fireHeight/10*15);
fill(255, 230, 0);
ellipse(x-fireHeight/10*-32,y+fireHeight/10*15,fireHeight/10*40,fireHeight/10*14);
};
var fireBullet = function(x, y) 
{               //bitmoji constructor (makes new bitmoji)
        this.x = x;
        this.y = y;                    //Score kept in bitmoji object
};
fireBullet.prototype.draw = function() { //draw method drawing bitmoji
    //this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    bulletFire(this.x, this.y, 20);    
};
fireBullet.prototype.hop = function() {             //hop method
        this.x += 15; //lower y, move up
};
/*fireBullet.prototype.checkForCarCrash = function(car) {  //check method
    if ((car.x >= this.x && car.x <= (this.x + 40)) &&
        (car.y >= this.y && car.y <= (this.y + 40))) {  //gemoetry test
        car.y = -400; //car dissapears
        score--;  //subtract 1 fromobal variable scor
        }
    
    };*/
    
    //Boss Bullet
var bossBullet = function (x, y, bobulletHeight) {
    noStroke();
    fill(0, 10, 61);
    triangle(x + 200 * bobulletHeight/100, y + 76 * bobulletHeight/100, x + 0 * bobulletHeight/100, y + 140 * bobulletHeight/100, x + 200 * bobulletHeight/100, y + 180 * bobulletHeight/100);
    fill(255, 5, 205);
    triangle(x + 175 * bobulletHeight/100, y + 104 * bobulletHeight/100, x - 11 * bobulletHeight/100, y + 140 * bobulletHeight/100, x + 175* bobulletHeight/100, y + 165 * bobulletHeight/100);
    fill(0, 255, 242);
    triangle(x + 160 * bobulletHeight/100, y + 118 * bobulletHeight/100, x - 30 * bobulletHeight/100, y + 140 * bobulletHeight/100, x + 160 * bobulletHeight/100, y + 157 * bobulletHeight/100);
};
var bossHornBullet = function(x, y) 
{
    this.x = x;
    this.y = y;
};
bossHornBullet.prototype.draw = function() { //draw method drawing bitmoji
    //this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    bossBullet(this.x, this.y, 60);    
};
bossHornBullet.prototype.hop = function() {             //hop method
    this.x -= 15; //lower y, move up
};
var Boss = function(x,y)
{
  this.x = x;
  this.y = y;
  
};
Boss.prototype.draw = function() 
{
    this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    boss(this.x + 210,this.y,5);
    bossWings(this.x + 210,this.y,4);    
};
Boss.prototype.checkForCollusionBullet = function(bullet){
    if ((bullet.x >= this.x && bullet.x <= (this.x + 20)) &&
        (bullet.y >= this.y - 50 && bullet.y <= (this.y + 20))) 
        {
            bossHearts -= 1; 
            bullet.x = -10;
        }
};

    //Male Astro Character 1
var character1 = function(x,y)
{
  this.x = x;
  this.y = y; 
};
character1.prototype.draw = function() {
    this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    feetFire(this.x+58,this.y+59,5);
    drawMaleAstro(this.x,this.y,40);
   
     
};
character1.prototype.hop = function(){
    this.y -=5;
};
character1.prototype.fall = function(){
    this.y +=5;
};
character1.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
             Enemies.x =round(random(300,400));
             Enemies.y =round(random(0,400));
      
    }
};
character1.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            jewel.y = round(random(0,400));
            jewel.x = round(random(400,600));
      
    }
};

    //Male Astro Power Up
var character1powerup = function(x,y)
{
  this.x = x;
  this.y = y; 
};
character1powerup.prototype.draw = function() {
    drawPowerUpMaleAstro(this.x, this.y, 45);
};
character1powerup.prototype.hop = function(){
    this.y -=5;
};
character1powerup.prototype.fall = function(){
    this.y +=5;
};
character1powerup.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
             Enemies.x =round(random(300,400));
             Enemies.y =round(random(0,400));
      
    }
};
character1powerup.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            jewel.y = round(random(0,400));
            jewel.x = round(random(400,600));
      
    }
};
character1powerup.prototype.checkForCollusionBullet = function(bullet){
    if ((bullet.x >= this.x - 100 && bullet.x <= (this.x + 150)) &&
        (bullet.y >= this.y - 80 && bullet.y <= (this.y))) 
        {
            hearts -= 1;
            bullet.x = 400;
        }
};

    //Female Astro Character 2
var character2 = function(x,y)
{
  this.x =x;
  this.y =y; 
};
character2.prototype.draw = function() {
    this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    feetFire(this.x+58,this.y+59,5);
    drawFemaleAstro(this.x,this.y,40);
};
character2.prototype.hop = function(){
    this.y -=5;
};
character2.prototype.fall = function(){
    this.y +=5;
};
character2.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
            Enemies.x =round(random(300,400));
             Enemies.y =round(random(0,400));
      
    }
};
character2.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            jewel.y = round(random(0,400));
            jewel.x = round(random(400,600));
      
    }
};

    //Female Astro Character 2 Power Up
var character2powerup = function(x,y)
{
  this.x =x;
  this.y =y; 
};
character2powerup.prototype.draw = function() {
    drawPowerUpFemaleAstro(this.x,this.y,45);
};
character2powerup.prototype.hop = function(){
    this.y -=5;
};
character2powerup.prototype.fall = function(){
    this.y +=5;
};
character2powerup.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
            Enemies.x =round(random(300,400));
             Enemies.y =round(random(0,400));
      
    }
};
character2powerup.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            
      
    }
};
character2powerup.prototype.checkForCollusionBullet = function(bullet){
    if ((bullet.x >= this.x - 100 && bullet.x <= (this.x + 150)) &&
        (bullet.y >= this.y - 80 && bullet.y <= (this.y))) 
        {
            hearts -= 1;
            bullet.x = 400;
        }
};

    //Male Character, character 3
var character3 = function(x,y)
{
  this.x =x;
  this.y =y; 
};
character3.prototype.draw = function() {
    this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    malecharacter1(this.x,this.y,4);
    malecharacterWings(this.x,this.y+2,4);
     
};
character3.prototype.hop = function(){
    this.y -=5;
};
character3.prototype.fall = function(){
    this.y +=5;
};
character3.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -= 1;
            Enemies.x = 400;
    }
};
character3.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            jewel.y = round(random(0,400));
            jewel.x = round(random(400,600));
    }
};


//Male Character power up, character 3
var character3powerup = function(x,y)
{
  this.x =x;
  this.y =y; 
};
character3powerup.prototype.draw = function() {
    maleCharacter1PoweredUp(this.x + 10, this.y, 4.8);
    maleCharacter1PoweredUpWings(this.x, this.y, 4.8);
     
};
character3powerup.prototype.hop = function(){
    this.y -=5;
};
character3powerup.prototype.fall = function(){
    this.y +=5;
};
character3powerup.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
            Enemies.x = 400;
      
    }
};
character3powerup.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
      
    }
};
character3powerup.prototype.checkForCollusionBullet = function(bullet){
    if ((bullet.x >= this.x && bullet.x <= (this.x + 90)) &&
        (bullet.y >= this.y - 100 && bullet.y <= (this.y - 20))) 
        {
            hearts -= 1;
            bullet.x = 400;
        }
};

    //Female Character, character 4
var character4 = function(x,y)
{
  this.x =x;
  this.y =y; 
};
character4.prototype.draw = function() {
    this.y = constrain(this.y, 0, height-50);  //constrain, don't let y get out of bound
    femaleCharacter1(this.x,this.y,4);
    femaleCharacterWings(this.x,this.y+2,4);
     
};
character4.prototype.hop = function(){
    this.y -=5;
};
character4.prototype.fall = function(){
    this.y +=5;
};
character4.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
            Enemies.x =400;
      
    }
};
character4.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            jewel.x = random(0,300);
      
    }
};

//Female Character power up, character 4
var character4powerup = function(x,y)
{
  this.x = x;
  this.y = y; 
};
character4powerup.prototype.draw = function() {
    //femaleCharacter1(this.x,this.y,4);
    //femaleCharacterWings(this.x,this.y+2,4);
    femaleCharacter1PoweredUp(this.x, this.y, 4.5);
    femaleCharacterWingsPoweredUp(this.x, this.y + 2, 4.5);
    
};
character4powerup.prototype.hop = function(){
    this.y -=5;
};
character4powerup.prototype.fall = function(){
    this.y +=5;
};
character4powerup.prototype.checkForCollusion = function(Enemies) {
    if ((Enemies.x >= this.x && Enemies.x <= (this.x + 40)) &&
        (Enemies.y >= this.y && Enemies.y <= (this.y + 40))) {
            hearts -=1;
            Enemies.x =400;
      
    }
};
character4powerup.prototype.checkForCollusionJewel = function(jewel) {
    if ((jewel.x >= this.x && jewel.x <= (this.x + 40)) &&
        (jewel.y >= this.y && jewel.y <= (this.y + 40))) {
            jewelCounter ++;
            jewel.x = random(0,300);
      
    }
};
character4powerup.prototype.checkForCollusionBullet = function(bullet){
    if ((bullet.x >= this.x && bullet.x <= (this.x + 90)) &&
        (bullet.y >= this.y - 100 && bullet.y <= (this.y - 20))) 
        {
            hearts -= 1;
            bullet.x = 400;
        }
};


    //Enemies
var Enemies = function(x, y) {
    this.x = x;
    this.y = y;
};
Enemies.prototype.draw = function() {
    enemy(this.x, this.y, 5);
    enemyWings(this.x+8,this.y,2);
};

//bitmoji funciton
var drawbackhair = function(x,y,bitheight)
{
        fill(89, 56, 21); //back hair
ellipse(x + bitheight/10*1 ,y+bitheight/10*6,bitheight/10*54,bitheight/10*50);
fill(252, 231, 191);

    };
var drawhead = function(x,y,bitheight)
{fill(252, 231, 191);
        ellipse(x+bitheight/10,y+bitheight/10,bitheight/10*50,bitheight/10*50);
    };
var drawindents = function(x,y,bitheight)
{noFill();//indents
ellipse(x-bitheight/10*26,y+bitheight/10*19,bitheight/10*23,bitheight/10*26);
noFill();
ellipse(x+bitheight/10*27,y+bitheight/10*19,bitheight/10*24,bitheight/10*26);
};
var drawhair = function(x,y,bitheight)
{fill(89, 56, 21);//hair
      ellipse(x-bitheight/10*1,y-bitheight/10*22,bitheight/10*48,bitheight/10*19);
ellipse(x+bitheight/10*25,y-bitheight/10*9,bitheight/10*10,bitheight/10*30);
ellipse(x-bitheight/10*25,y-bitheight/10*9,bitheight/10*10,bitheight/10*30);
}; 
var draweye = function (x,y,bitheight)
{ var eye = bitheight-1;
        fill(99, 52, 13); //eyes
ellipse(x+bitheight/10*10,y-bitheight/10*3,eye-bitheight/10*2,eye-bitheight/10*2);
ellipse(x-bitheight/10*8,y-bitheight/10*3,eye-bitheight/10*2,eye-bitheight/10*2);
 
};
var drawglasses = function(x,y,bitheight)
{var eye = bitheight-1;
fill(111, 88, 98); //glasses
ellipse(x+bitheight/10*10,y-bitheight/10*3,eye+bitheight/10*10,eye+bitheight/10*6);
ellipse(x-bitheight/10*8,y-bitheight/10*3,eye+bitheight/10*10,eye+bitheight/10*6);
rect(x+bitheight/10*0,y-bitheight/10*5,bitheight/10*4,bitheight/10*2);
rect(x+bitheight/10*17,y-bitheight/10*5,bitheight/10*4,bitheight/10*2);
rect(x-bitheight/10*20,y-bitheight/10*5,bitheight/10*4,bitheight/10*2);
fill(252, 231, 191);
ellipse(x+bitheight/10*10,y-bitheight/10*3,eye+bitheight/10*4,eye+bitheight/10*2);
ellipse(x-bitheight/10*8,y-bitheight/10*3,eye+bitheight/10*4,eye+bitheight/10*2);

};
var drawBitmojiKatHead = function(x,y,bitheight) // draw the top part of the bimoji
{
   
drawbackhair(x,y,bitheight);
drawhead(x,y,bitheight);
drawindents(x,y,bitheight);
drawhair(x,y,bitheight);
drawglasses(x,y,bitheight);
draweye(x,y,bitheight);

};
var drawneck = function(x,y,bitheight)
{fill(252, 231, 191);
ellipse(x+bitheight/10*1,y+bitheight/10*25,bitheight/10*21,bitheight/10*36);
//neck
};
var drawshirt = function(x,y,bitheight)
{fill(194, 186, 213);
quad(x-bitheight/10*13,y+bitheight/10*25,x+bitheight/10*17,y+bitheight/10*25,x+bitheight/10*37,y+bitheight/10*60,x-bitheight/10*31,y+bitheight/10*60);
//shirt
};
var drawname = function(x,y,bitheight)
{stroke(0, 0, 0);
line(x-bitheight/10*10,y+bitheight/10*33,x-bitheight/10*10,y+bitheight/10*49);
line(x-bitheight/10*10,y+bitheight/10*43,x-bitheight/10*1,y+bitheight/10*33);
line(x-bitheight/10*10,y+bitheight/10*41,x+bitheight/10*2,y+bitheight/10*50);
line(x+bitheight/10*4,y+bitheight/10*33,x+bitheight/10*15,y+bitheight/10*33);
line(x+bitheight/10*10,y+bitheight/10*33,x+bitheight/10*10,y+bitheight/10*49);
 // name
};
var drawmouth = function(x,y,bitheight)
{
    noStroke();
fill(240, 0, 0);
ellipse(x+bitheight/10*1,y+bitheight/10*12,bitheight/10*15,bitheight/10*2); 
strokeWeight(1);
//mouth
};
var drawBitmojiKatbody = function(x,y,bitheight) // draws the bottom part of the bitmoji
{
  
drawneck(x,y,bitheight);
drawshirt(x,y,bitheight);
drawname(x,y,bitheight);
drawmouth(x,y,bitheight);
};
var drawBitmojiKat = function(x,y,bitheight) // draws the full bitmoji
// consturtor function
{   noStroke();
    drawBitmojiKatHead(x,y,bitheight);
 drawBitmojiKatbody(x,y,bitheight);
 
};

    //Lily Bitmoji
var drawBitmojiLily = function (x,y,h)
{
        // Your drawBitmojiLily function code
        var drawBitmojiLilyBody = function(){
            noStroke();
            //neck
            fill(241, 194, 125);
            rect(x+95*h/100,y+(h/100*34),h/100*16,h/100*19,h/100*18);
            noStroke();
            //rightear
            fill(232, 173, 90);
            ellipse(x+67*h/100, y+15*h/100, 30*h/100, 25*h/100);
            //leftear
            ellipse(x+134*h/100, y+15*h/100, h/100*30, h/100*25);
            
            fill(241, 194, 125);
            ellipse(x+100*h/100,y,h/100*80,h/100*90); //head
            //body
            fill(51, 41, 41);
            rect(x+73*h/100,y+70*h/100,h/100*61,h/100*30,h/100*18);
            //scarf
            fill(246, 232, 250);
            stroke(0, 0, 0);
            strokeWeight(1);
            arc(x+117*h/100,y+80*h/100,40*h/100,44*h/100,-368,6);
            arc(x+104*h/100,y+66*h/100,65*h/100,35*h/100,-270,13);
            
            fill(255, 255, 255);
            text("LN",x+80*h/100,y+85*h/100,15*h/100,15*h/100);
            
        };
         
            
        var drawBitmojiLilyHead = function(){
            noStroke();
            fill(122, 0, 0);
            //hairleft
            bezier(x+55*h/100, y+0*h/100, x+101*h/100, y+23*h/100, x+141*h/100, y-87*h/100, x+56*h/100, y-1*h/100);
            arc(x+94*h/100,y-9*h/100,70*h/100,72*h/100,525,665);
            //hairright
            bezier(x+111*h/100, y-31*h/100, x+64*h/100, y-6*h/100, x+206*h/100, y+38*h/100, x+105*h/100, y-38*h/100);
            arc(x+111*h/100,y-5*h/100,56*h/100,73*h/100,587,724);
            //glasses
            stroke(2, 64, 1);
            strokeWeight(3);
            fill(241, 194, 125);
            ellipse(x+117*h/100,y+11*h/100,27*h/100,22*h/100);
            ellipse(x+82*h/100,y+11*h/100,27*h/100,22*h/100);
            line(x+97*h/100,y+11*h/100,x+102*h/100,y+11*h/100);
            //eyes
            stroke(0, 0, 0);
            strokeWeight(1/2);
            fill(255, 255, 255);
            ellipse(x+117*h/100,y+10*h/100,12*h/100,12*h/100);//left
            ellipse(x+82*h/100,y+11*h/100,13*h/100,12*h/100);//right
            fill(0, 0, 0);
            ellipse(x+116*h/100,y+11*h/100,6*h/100,8*h/100);//right
            ellipse(x+82*h/100,y+12*h/100,6*h/100,8*h/100);//left
            //lips
            stroke(240, 130, 130);
            strokeWeight(3);
            fill(241, 194, 125);
            arc(x+103*h/100,y+28*h/100,19*h/100,13*h/100,0,139);
            //earings
            stroke(245, 212, 49);
            line(x+62*h/100,y+20*h/100,x+62*h/100,y+29*h/100);
            line(x+137*h/100,y+20*h/100,x+137*h/100,y+29*h/100);
            ellipse(x+62*h/100,y+33*h/100,5*h/100,5*h/100);
            ellipse(x+137*h/100,y+33*h/100,5*h/100,5*h/100);
            noStroke();     
         
        };  
            drawBitmojiLilyBody();
            drawBitmojiLilyHead(); 
    
    };
    
    //trophy + award
var trophy = function(x,y,trophyHeight)
{
fill(255, 238, 0);
stroke(140, 138, 18);
rect(x-trophyHeight/10*30,y-trophyHeight/10*3,trophyHeight/10*15,trophyHeight/10*30);
rect(x-trophyHeight/10*36,y+trophyHeight/10*26,trophyHeight/10*30,trophyHeight/10*15);
arc(x-trophyHeight/10*22,y-trophyHeight/10*26,trophyHeight/10*37,trophyHeight/10*73,0,180);
};
var award = function(x,y)
{
    this.x = x;
    this.y =y;
};
award.prototype.draw = function() {
    trophy(this.x,this.y,5);
};
var Trophy = new award(230,100);

    //space ship
var ufo1 = function(x,y,ufoHeight)
{
   noStroke();
fill(143, 143, 143);
ellipse(x+ufoHeight/10*25,y+ufoHeight/10*108,ufoHeight/10*125,ufoHeight/10*56);
ellipse(x+ufoHeight/10*28,y+ufoHeight/10*86,ufoHeight/10*183,ufoHeight/10*62);
fill(0, 255, 251);
ellipse(x+ufoHeight/10*28,y+ufoHeight/10*81,ufoHeight/10*142,ufoHeight/10*39);
noFill();
arc(x+ufoHeight/10*28,y+ufoHeight/10*126,ufoHeight/10*148,ufoHeight/10*254,200,340);
drawBitmojiKat(x+ufoHeight/10*26,y+ufoHeight/10*13,ufoHeight/10*12);

};
var ufo2 = function(x,y,ufoHeight)
{
   strokeWeight(1);
fill(143, 143, 143);
ellipse(x+ufoHeight/10*25,y+ufoHeight/10*108,ufoHeight/10*125,ufoHeight/10*56);
ellipse(x+ufoHeight/10*28,y+ufoHeight/10*86,ufoHeight/10*183,ufoHeight/10*62);
fill(0, 255, 251);
ellipse(x+ufoHeight/10*28,y+ufoHeight/10*81,ufoHeight/10*142,ufoHeight/10*39);
noFill();
arc(x+ufoHeight/10*28,y+ufoHeight/10*126,ufoHeight/10*148,ufoHeight/10*254,200,340);
drawBitmojiLily(x+ufoHeight/10*-54,y+ufoHeight/10*2,ufoHeight/10*80);

};
var floatingIsland = function(x,y,floatingIsland)
{
    fill(110, 110, 110);
    triangle(x+floatingIsland/10*41,y,x-30,y+15,x+floatingIsland/10*39,y+floatingIsland/10*113);
    triangle(x-floatingIsland/10*91,y,x-floatingIsland/10*33,y-floatingIsland/10*4,x-floatingIsland/10*60,y+floatingIsland/10*108);
    triangle(x+floatingIsland/10*54,y,x-floatingIsland/10*38,y-floatingIsland/10*9,x-floatingIsland/10*50,y+floatingIsland/10*110);
    triangle(x-floatingIsland/10*8,y,x+floatingIsland/10*30,y-floatingIsland/10*4,x-floatingIsland/10*27,y+floatingIsland/10*111);
    triangle(x-floatingIsland/10*8,y,x+floatingIsland/10*30,y-floatingIsland/10*4,x+floatingIsland/10*50,y+floatingIsland/10*130);
    fill(158, 155, 158);
    triangle(x-floatingIsland/10*91,y,x-floatingIsland/10*33,y-floatingIsland/10*4,x-floatingIsland/10*27,y+floatingIsland/10*98);
    triangle(x+floatingIsland/10*52,y,x+floatingIsland/10*30,y-floatingIsland/10*4,x+floatingIsland/10*29,y+floatingIsland/10*120);
    triangle(x+floatingIsland/10*10,y,x-floatingIsland/10*30,y+floatingIsland/10*15,x+floatingIsland/10*4,y+floatingIsland/10*113);
    fill(89, 62, 23);
    ellipse(x-floatingIsland/10*20,y,floatingIsland/10*156,floatingIsland/10*33);
    fill(150, 105, 42);
    ellipse(x-floatingIsland/10*20,y,floatingIsland/10*140,floatingIsland/10*25);
};

    //confetti
var coffi = function(x,y,coffiHeight)
{ noStroke();
    
 quad(x-coffiHeight/10*63,y-coffiHeight/10*106,x-coffiHeight/10*70,y-coffiHeight/10*120,x-coffiHeight/10*86,y-coffiHeight/10*110,x-coffiHeight/10*80,y-coffiHeight/10*100);   
 quad(x-coffiHeight/10*98,y-coffiHeight/10*80,x-coffiHeight/10*121,y-coffiHeight/10*83,x-coffiHeight/10*116,y-coffiHeight/10*95,x-coffiHeight/10*96,y-coffiHeight/10*92);
};

    //character 1
var character1EndGame = function(x,y)
{
  this.x = x;
  this.y =y; 
};
character1EndGame.prototype.draw = function() 
{
    drawMaleAstro(this.x - 30, this.y, 40);
};
    //C2
var character2EndGame = function(x,y)
{
  this.x = x;
  this.y =y; 
};
character2EndGame.prototype.draw = function() 
{
    drawFemaleAstro(this.x - 30,this.y,40);
};
    //C3
var character3EndGame = function(x,y)
{
  this.x = x;
  this.y =y; 
};
character3EndGame.prototype.draw = function() 
{
     malecharacter1(this.x,this.y,4);
     maleCharacterClosedWings(this.x,this.y,4);
};
    //C4
var character4EndGame = function(x,y)
{
  this.x = x;
  this.y =y; 
};
character4EndGame.prototype.draw = function()
{
  femaleCharacter1(this.x,this.y,4);
  femalecharacterClosedWings(this.x,this.y,4);
};
    //C1 Power up
var character1PowerUp = function(x,y)
{
    this.x = x;
    this.y = y;
};
character1PowerUp.prototype.draw = function() 
{
   drawPowerUpMaleAstro(this.x,this.y,40);
    
    
};
    //C2 Power Up
var character2PowerUp = function(x,y)
{
    this.x = x;
    this.y = y;
};
character2PowerUp.prototype.draw = function() 
{
    drawPowerUpFemaleAstro(this.x,this.y,40);
    
};
    //C3 Power up
var character3PowerUp = function(x,y)
{
    this.x = x;
    this.y = y;
};
character3PowerUp.prototype.draw = function() 
{
    maleCharacter1PoweredUp(this.x,this.y,4);
    maleCharacter1PoweredUpWings(this.x, this.y, 4);
    
};
    //c4 pwoer up
var character4PowerUp = function(x,y)
{
    this.x =x;
    this.y =y;
    
};
character4PowerUp.prototype.draw = function() 
{
    femaleCharacter1PoweredUp(this.x,this.y,4);
    femaleCharacterWingsPoweredUp(this.x, this.y, 4);       
};

    //confetti object
var confetti = function(x,y)
{
  this.x = x;
  this.y = y;
};
confetti.prototype.draw = function() {
    coffi(this.x,this.y,4);
};
var Confetti =[];

    //spaceship object
var ufo = function(x, y) 
{
    this.x = x;
    this.y = y;
};
ufo.prototype.draw = function() 
{
    
    ufo1(this.x, this.y, 2);
    ufo2(this.x+70,this.y,2);
};
var Ufo = [];

    //push bitmoji onto spaceship
for (var i = 0; i < numOfBitmoji; i++) 
    {  
    Ufo.push(new ufo(round(400 +(i*140)), 325));
  
}

    //Buttons + scene changes
var startButton = new Button ({
    x: 125,
    y: 190,
    width: 140,
    height: 30,
    label: "START",
    onClick: function() {
        currentScene = 2;
    }
});
var nextButton1 = new Button ({ //next button on instruction scene
    x: 240,
    y: 350,
    width: 140,
    height: 30,
    label: "NEXT",
    color: color(199, 245, 193),
    onClick: function () {
        currentScene = 3; //character selection Screen
    }
});
var readyButton = new Button ({  //next Button on character selection screen
    x: 130,
    y: 130,
    width: 140,
    height: 30,
    label: "READY",
    color: color(245, 190, 71),
    onClick: function () {
        currentScene = 5; //gameScene
    }
}); 
var nextButton2 = new Button ({ //next button on instruction scene
    x: 130,
    y: 170,
    width: 140,
    heigth: 20,
    label: "NEXT",
    color: color(0, 255, 4),
    onClick: function () {
        currentScene = 4; //ready selection Screen
    }
});
var tempButton = new Button ({
    x: 10,
    y: 30,
    width: 140,
    height: 30,
    label: "BOSS",
    color: color(199, 245, 193),
    onClick: function () {
        currentScene = 5; //bossScene
    }
});

    //lily's start scene
var startScene = function()  //start Scene
{
    currentScene = 1; // changes current scene scene 1
    background(65, 99, 235);
    drawBackgroundClouds();
     drawCloud(1, -6, 88, color(133, 243, 255), color(150, 159, 255));
     drawCloud(37, 158, 50, color(150, 159, 255), color(92, 116, 255));
     drawCloud(195, 175, 107, color(133, 243, 255), color(150, 159, 255));
     drawCloud(281, 81, 50, color(150, 159, 255), color(92, 116, 255));
    drawStars();
    startButton.draw();

};
var instructionScene = function()  //instruction scene scene 2
{
    currentScene = 2; // changes current scene
    background(65, 99, 235);
    drawBackgroundClouds();
     drawCloud(1, -6, 88, color(133, 243, 255), color(150, 159, 255));
     drawCloud(37, 158, 50, color(150, 159, 255), color(92, 116, 255));
     drawCloud(195, 175, 107, color(133, 243, 255), color(150, 159, 255));
     drawCloud(281, 81, 50, color(150, 159, 255), color(92, 116, 255));
    drawStars();
    fill(0, 0, 0);
    textSize(15);
    text("Select your characters. You will be flying through a swarm of aliens that have attacked earth. Your goal is to collect 7 gems and level up. Then you will battle the final boss.",35,60,351,246);
    text("Using the arrow up or down, move the pegasus up and down the screen to dodge the aliens coming towards. There are also clouds they like to hide behind so be careful. Let's see how long you can last.", 5, 196, 402, 415);
    nextButton1.draw();
};
var characterSelectionScene = function ()  //scene 3
{ //scene 3 character selection screen
    currentScene = 3;
    var a = color(39, 70, 184);
    var b = color(202, 0, 247);
    //var a = color(199, 59, 59);
    //var b = color(255, 157, 28);
    for (var i = 0; i < 400; i++)
{
    stroke(lerpColor(a,b, i/400));
    line (0, i, 400, i);
    //line(i, 0, i, 400);
}
    noStroke();
    drawBackgroundClouds();
    drawMaleAstro(50, 90, 50);
    drawFemaleAstro(250, 90, 50);
    strokeWeight(0.5);
    femaleCharacter1(290,250,5);
    femalecharacterClosedWings(290,250,5);
    malecharacter1(100,250,5);
   maleCharacterClosedWings(100,250,5);
    fill(255, 170, 0);
    //check which character was clicked
    if (mouseX > 10 && mouseX < 100 && mouseY > 50 && mouseY < 140)
        {
            characterNumber = 1;
        }
    if (mouseX > 200 && mouseX < 300 && mouseY > 50 && mouseY < 140)
        {
            characterNumber = 2;
        }
    if (mouseX > 70 && mouseX < 130 && mouseY > 220 && mouseY < 270)
        {
            characterNumber = 3;
        }
    if (mouseX > 260 && mouseX < 320 && mouseY > 220 && mouseY < 280)
        {
            characterNumber = 4;
        }
    text("Character Selection",23,13,351,246);
};
var readyScene = function () //scene 4
{
    currentScene = 4; // changes current scene scene 1
    //background(242, 238, 29);
    //background(214, 207, 8);
    background(4, 7, 56);
    drawBackgroundClouds();
     drawCloud(1, -6, 88, color(133, 243, 255), color(150, 159, 255));
     drawCloud(37, 158, 50, color(150, 159, 255), color(92, 116, 255));
     drawCloud(195, 175, 107, color(133, 243, 255), color(150, 159, 255));
     drawCloud(281, 81, 50, color(150, 159, 255), color(92, 116, 255));
    drawStars();
    readyButton.draw();
};
var gameoverScene = function () //scene 7 game over
{
    rectMode(CENTER);
    currentScene = 7;
    background(255, 186, 247);
    drawSun();
    drawStars();
    fill(255, 255, 255);
    rect(204, 160, 300, 80, 20);
    fill(41, 1, 1);
    textSize(40);
    text("GAME OVER", 200, 140);
    fill(240, 168, 0);
    textSize(18);
    text("Click Restart to Try Again :)", 190, 299);

};
var endScene = function () //scene 8 end scene
{
    currentScene = 8;
    var Character1PowerUp = new character1PowerUp(40,160);
        var Character2PowerUp = new character2PowerUp(40,160);
        var Character3PowerUp = new character3PowerUp(40,180);
        var Character4PowerUp= new character4PowerUp(40,180);
        var Character1EndGame = new character1EndGame(210,160);
        var Character2EndGame = new character2EndGame(210,160);
        var Character3EndGame = new character3EndGame(210,180);
        var Character4EndGame = new character4EndGame(210,180);
    
draw = function() {
    
    
        background(41, 0, 34);
        drawSun();
        drawStars();
        floatingIsland(230,215,5);
    if (characterNumber === 1)
    {
        if (Character1PowerUp.x === 180)
        {
            Trophy.draw();
             strokeWeight(0.5);
            Character1EndGame.draw();
            fill(221, 255, 0);
            textSize(38);
            text("You win",156,44);
        }
        else
        {
            Character1PowerUp.draw();
            Character1PowerUp.x +=1;
        }
        
    }
     if (characterNumber === 2)
    {
        if (Character2PowerUp.x === 180)
        {
            Trophy.draw();
            strokeWeight(0.5);
            Character2EndGame.draw();
            fill(221, 255, 0);
            textSize(38);
            text("You win",156,44);
        }
        else
        {
            Character2PowerUp.draw();
            Character2PowerUp.x += 1;
        }
        
    }
     if (characterNumber === 3)
    {
        
         
        if (Character3PowerUp.x === 210)
        {
            Trophy.draw();
            Character3EndGame.draw();
            fill(221, 255, 0);
            textSize(38);
            text("You win",156,44);
        }
        else
        {
                Character3PowerUp.draw();
         Character3PowerUp.x +=1;
        }
        
    }
     if (characterNumber === 4)
    {
        if (Character4PowerUp.x ===210)
        {
            Trophy.draw();
             strokeWeight(0.5);
            Character4EndGame.draw();
            fill(221, 255, 0);
            textSize(38);
            text("You win",156,44);
        }
        else
        {
        Character4PowerUp.draw();
        Character4PowerUp.x +=1;
        }
        
    }
    
          for (var i = 0; i < numOfBitmoji; i++) {
              Ufo[i].draw();
               Ufo[i].x -= 1;
               if(Ufo[i].x < -100)
        {
            Ufo[i].x = round(435 +(2*115));
            Ufo[i].y = 350;
        }
          }
           var z = color(252, 174, 174);
    var y = color(184, 176, 255);
    var x = color(146, 176, 97);
    
    for( var i = 0; i< numOfConfetti; i++)
{    var randomColorPicker = round(random(0.5,3.4));
    Confetti.push(new confetti(random(0,425), random(-1500, 0)));
    if(randomColorPicker === 1)
    {
        fill(z);
      Confetti[i].draw();
      Confetti[i].y +=1;
    }
    if(randomColorPicker === 2)
    {
        fill(y);
      Confetti[i].draw();
      Confetti[i].y +=1;
    }if(randomColorPicker === 3)
    {
        fill(x);
      Confetti[i].draw();
      Confetti[i].y +=1;
    }
}
ticks++;
};

};
var bossScene = function ()  //scene 6 boss Scene
{
    currentScene = 6;
    var bulletrelease = 0;
    var bullets = [];
    var yPositions = [];
    var numBullets = 1;
    hearts = 4;
    var move = 1;
    var bullet = round(random(0.5,3.4));
    
    
            //newCHARACTERS
    //new power up male astro
    var Character1Powerup = new character1powerup(40,100);
    //new power up female astrp
    var Character2Powerup = new character2powerup(40,100);
    //new power up male unicorn
    var Character3Powerup = new character3powerup(40,100);
    //new power up male unicorn
    var Character4Powerup = new character4powerup(40,100);
    
            //newBULLETS
    //bullet female unicorn 4+ need to change y to match character
    var femaleBullet = new uniBullet(-140, Character4Powerup.y);
    //bullet male unicorn 3 + need to change y to match character
    var maleBullet = new uniBullet(-140, Character3Powerup.y );
    //Astro fire female 2
    var femaleAstrobullet = new fireBullet (-140, Character2Powerup.y);
    //Astro fire male 1
    var maleAstrobullet = new fireBullet (-140, Character1Powerup.y);
    //boss bullet
    var BossBullet = new bossHornBullet(450, 200);
    var finalboss = new Boss(150,150);
    var BossBullet = new bossHornBullet(40, 200);
    
        //pushing new 
    
    
draw = function() 
{
    var a = color(234, 0, 255);
    var b = color(255, 196, 0);
    for (var i = 0; i < 400; i++)
    {
        stroke(lerpColor(a, b, i/400));
        line (0, i, 408, i);
        line(i + 2, 0, i + 2, 428);
    }
    
    for (var i = 0; i <= hearts; i++) 
    {
        image(getImage("space/healthheart"), i * 27 + 17, 20, 25, 25);
    }
    
    for (var i = 0; i <= bossHearts; i++) 
    {
        image(getImage("cute/GemGreen"), i * 32 + 172, 340, 30, 48);
    }
    
    if (bossHearts <= 4 && hearts <= 4) {
        fill(255, 221, 143);
        textSize(18);
        text("Hit space bar to shoot the boss", 200, 200);
    }
    
    fill(255, 255, 255);
    textSize(15);
    text("***HIT SPACE BAR TO SHOOT BOSS", 200, 200); 
    
    //draw Boss + bullet
    noStroke();
    finalboss.draw();
    BossBullet.hop();
    BossBullet.draw();
    BossBullet.y = finalboss.y;
    finalboss.y += move;
    

    if (finalboss.y > 350)
    {
        finalboss.y = round(random(0,20));
    }
    if (BossBullet.x < 0)
    {
        BossBullet.x = 600;
    }
    
    //draw bullet
    if (characterNumber === 1) //male astro
    {
        maleAstrobullet.draw();
    }
    if (characterNumber === 2) //female astro
    {
        femaleAstrobullet.draw();
    }
    if (characterNumber === 3) //male peagus
    {
        maleBullet.draw();
    }
    if (characterNumber === 4) //female peagus
    {
        femaleBullet.draw();
    }
    
    if (keyIsPressed && key.code === 32) 
    {    
       bulletrelease = 1; //if true, call bitmoji hop method
       
    if (characterNumber === 1) //male astro
    {
       maleAstrobullet.y = Character1Powerup.y;
    }
    if (characterNumber === 2) //female astro
    {
       femaleAstrobullet.y = Character2Powerup.y;
    }
    if (characterNumber === 3) //male peagus
    {
       maleBullet.y = Character3Powerup.y;
    }
    if (characterNumber === 4) //female peagus
    {
       femaleBullet.y = Character4Powerup.y;
    }
        // make the y of each match the left unicorn
    } 
    
    if (bulletrelease === 1) 
    {
         if (characterNumber === 1) 
         {
            maleAstrobullet.hop();
         }
          if (characterNumber === 2)
          {
            femaleAstrobullet.hop(); 
          }
           if (characterNumber === 3)
           {
                maleBullet.hop(); 
           }
            if (characterNumber === 4)
            {
                femaleBullet.hop(); 
            }
    }
    
    if (maleAstrobullet.x > 400)
   {
       bulletrelease = 0;
       maleAstrobullet.x = -200;
   }
   if (femaleAstrobullet.x > 400)
   {
       bulletrelease = 0;
       femaleAstrobullet.x = -200;
   }
   if (maleBullet.x > 400)
   {
       bulletrelease = 0;
       maleBullet.x = -200;
   }
   if (femaleBullet.x > 400)
   {
       bulletrelease = 0;
       femaleBullet.x = -200;
   }
   
   uniBullet(-140, Character3Powerup.y - 70);
  
    drawBossStars();
        //check collusion for boss bullet
    
    if (characterNumber === 1) 
    {
        Character1Powerup.checkForCollusionBullet(BossBullet);
        finalboss.checkForCollusionBullet(maleAstrobullet);
    }
    if (characterNumber === 2) 
    {
        Character2Powerup.checkForCollusionBullet(BossBullet);
        finalboss.checkForCollusionBullet(femaleAstrobullet);
    }
    if (characterNumber === 3) 
    {
        Character3Powerup.checkForCollusionBullet(BossBullet);
        finalboss.checkForCollusionBullet(maleBullet);
    }
    if (characterNumber === 4) 
    {
        Character4Powerup.checkForCollusionBullet(BossBullet);
        finalboss.checkForCollusionBullet(femaleBullet);
    }
    
    if(characterNumber === 1)
    {
        Character1Powerup.draw();
        if(keyIsPressed && keyCode ===UP)
              {
                Character1Powerup.hop();
              }
              if(keyIsPressed && keyCode === DOWN)
              {
                Character1Powerup.fall();   
              }
    }
    
    if(characterNumber === 2)
    {
        Character2Powerup.draw();
              if(keyIsPressed && keyCode ===UP)
              {
                  Character2Powerup.hop();
              }
              if(keyIsPressed && keyCode === DOWN)
              {
                Character2Powerup.fall();   
              }
    }
    
    if(characterNumber === 3)
    {
        Character3Powerup.draw();
              if(keyIsPressed && keyCode ===UP)
              {
                Character3Powerup.hop();
              }
              if(keyIsPressed && keyCode === DOWN)
              {
                Character3Powerup.fall();   
              }
    }
    
    if(characterNumber === 4)
    {
        Character4Powerup.draw();
              if(keyIsPressed && keyCode ===UP)
              {
                Character4Powerup.hop();
              }
              if(keyIsPressed && keyCode === DOWN)
              {
                Character4Powerup.fall();   
              }
        //femaleCharacter1PoweredUp(40,mouseY,4);
        //femaleCharacterWingsPoweredUp(40,mouseY+2,4);
    }
    
    if (bossHearts === 0) 
        {
           endScene(); 
        }
    ticks +=1;
    if (hearts === 0) 
        {
            currentScene = 7;
            gameoverScene();
            noLoop();
        }
}; 
};
var gameScene = function () //scene 5
{
    currentScene = 5; // changes current scene
    var enemies = [];
    var numOfEnemies = 4;
    var xEnemies =0;
    var enemiesSpeed = [];
    var numOfClouds = 4;
    var xPositionClouds = [];
    var yPositionClouds = [];
    var cloudsSpeed = [];
    var numofJewels = 1;
    var xPositionJewels =[];
    var yPositionJewels =[];
    var jewelsSpeed = [];
    
  
    for (var i = 0; i < numOfEnemies; i++) {  
    enemies.push(new Enemies(random(300,400), random(200, 260)));
    enemiesSpeed.push(round(random(1,6)));
}
    for(var i = 0; i < numOfClouds; i++)
    {
        xPositionClouds.push(round(random(400,500))); // give a random start x position
        yPositionClouds.push(round(random(0,300)));// give a random start y position
        cloudsSpeed.push(round(random(1,4))); // give a random start speed
    }
    for (var i = 0; i < numofJewels; i++)
    {
        xPositionJewels.push(round(random(500,1000)));
        yPositionJewels.push(round(random(0,400)));
        jewelsSpeed.push(round(random(1,3)));
    }
    
    var Character1 = new character1(40,100);
    var Character2 = new character2(40,100);
    var Character3 = new character3(40,100);
    var Character4 = new character4(40,100);
    
    draw = function() {
        
        background(41, 0, 34);
        drawSun();
        drawStars();
        
        if (jewelCounter < 5)
        {
            fill(255, 255, 255);
            textSize(15);
            text("***Collect 8 gems to level up", 180, 25); 
        }
        else
        {
            textSize(10);
            text("Almost there. Get ready to battle the boss!", 190, 25);
        }
        
        fill(214, 3, 154);
        if (hearts < 4 && hearts > 1) 
        {
            text("remember to avoid the enemies", 190, 200);
        }
        
        //draw life counter + if lifecounter = 0, gameover scene
        for (var i = 0; i <= hearts; i++) 
        {
            image(getImage("space/healthheart"), i * 27 + 22, 335, 25, 25);
        }
        
        //draw Jewels
        for (var i = 0; i <= numofJewels; i++) 
        {
            jewels[i].draw();
            jewels[i].x -= 3;
             
            Character1.checkForCollusionJewel(jewels[i]);
            Character2.checkForCollusionJewel(jewels[i]);
            Character3.checkForCollusionJewel(jewels[i]);
            Character4.checkForCollusionJewel(jewels[i]);
            
            if(jewels[i].x < -100)
            {
                jewels[i].x = round(random(400,450));
                jewels[i].y = round(random(0,400));
            }
    
            //character control
            strokeWeight(1);
            if (characterNumber === 1)
            {
                Character1.draw();
                if(keyIsPressed && keyCode ===UP)
                  {
                      Character1.hop();
                  }
                  if(keyIsPressed && keyCode === DOWN)
                  {
                    Character1.fall();   
                  }
            }
            if (characterNumber === 2)
            {
                  Character2.draw(); 
                  if(keyIsPressed && keyCode ===UP)
                  {
                      Character2.hop();
                  }
                  if(keyIsPressed && keyCode === DOWN)
                  {
                    Character2.fall();   
                  }
       
            }
            if ( characterNumber === 3)
            {
                strokeWeight(0.5);
                  Character3.draw();
                  if(keyIsPressed && keyCode ===UP)
                  {
                      Character3.hop();
                  }
                  if(keyIsPressed && keyCode === DOWN)
                  {
                    Character3.fall();   
                  }
            }
            if (characterNumber === 4)
            {
                strokeWeight(0.5);
                Character4.draw();
                if(keyIsPressed && keyCode ===UP)
                  {
                      Character4.hop();
                  }
                  if(keyIsPressed && keyCode === DOWN)
                  {
                    Character4.fall();   
                  }
            }  
        }
        
        //draw jewel counter
        if (jewelCounter < 6)
        {
        for (var i = 0; i <= jewelCounter ; i++) 
            {
                jewel(i * 27 + 24, 370, 2.5, 2);
            }
        }
        if (jewelCounter > 6)
        {
            bossScene(); 
        }
        
        //draw enemies
        for (var i = 0; i < numOfEnemies; i++) 
        {
    
            enemies[i].draw();
           
            enemies[i].x -= 1;
            if(enemies[i].x < -100)
            {
                enemies[i].x = round(random(300,400));
                enemies[i].y = round(random(0,300));
            }
            
             if (characterNumber ===1)
            {
            Character1.checkForCollusion(enemies[i]);
            }
             else if (characterNumber ===2)
            {
            Character2.checkForCollusion(enemies[i]);
            }
            else if (characterNumber ===3)
            {
            Character3.checkForCollusion(enemies[i]);
            }
            
            else if (characterNumber ===4)
            {
            Character4.checkForCollusion(enemies[i]);
            }
             
    }
            
        //draw Clouds
        for (var i = 0; i< numOfClouds; i++)
        {
            cloud(xPositionClouds[i],yPositionClouds[i],8);
            if (xPositionClouds[i]<-50)
            {
                xPositionClouds[i] = random(400,450);
                cloudsSpeed[i] = random(2,5);
            }
            else  
            {
                xPositionClouds[i] =  xPositionClouds[i]- cloudsSpeed[i];
            }
    }
    //tempButton.draw();
    ticks += 1;
    if (hearts === 0) 
        {
            gameoverScene();
            noLoop();
        }
};
};


mouseClicked = function() {
    if (currentScene === 1) //Start Scene
    {
        startButton.handleMouseClick();
    }
    if (currentScene === 2) // Instruction Scene
    {
        nextButton1.handleMouseClick();  
    }
    if (currentScene === 3) // Character Selection + if mouseclicked on character , shower ready scene
    {
        nextButton2.handleMouseClick();
    }
    if (currentScene === 4) // Need ready scene
    {
        readyButton.handleMouseClick();
    }
    if (currentScene === 5) // After game scene finished, need button to to continue to boss scene
    {
        tempButton.handleMouseClick();
    }
};

draw = function() {
    if (currentScene === 1)  //start
    {
        startScene();
    }
    else if (currentScene === 2) //instruction
    {
        instructionScene();
    }
    else if (currentScene === 3) //character
    {
        characterSelectionScene();
        if (currentScene === 3 && characterNumber === 1) {
            textSize(15);
            text("You chose Male Astronaut!", 200, 350);
            nextButton2.draw();
        }
            
        if (currentScene === 3 && characterNumber === 2) {
            textSize(15);
            text("You chose Female Astronaut!", 200, 350);
            nextButton2.draw();
        }
        if (currentScene === 3 && characterNumber === 3) {
            textSize(15);
            text("You chose Male Unicorn!", 200, 350);
            nextButton2.draw();
        }
        if (currentScene === 3 && characterNumber === 4) {
            characterNumber =4;
            textSize(15);
            text("You chose Female Unicorn!", 200, 350);
            nextButton2.draw();
        }
    }
    else if (currentScene === 4) //ready scene
    {
        readyScene();
    }
    else if (currentScene === 5) //game scene
    {
        gameScene();
    }
    else if (currentScene === 6) //boss scene
    {
        bossScene();
    }
    else if (currentScene === 7) //gameover scene
    {
        gameoverScene();
    }
    else if (currentScene === 8) //end scene
    {
        endScene();
    }
};
